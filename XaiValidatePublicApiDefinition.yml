openapi: 3.0.1
info:
  title: XAI Validate API
  x-logo:
    url: "https://tictoc.ai/img/XAI_rgb.svg"
    backgroundColor: "#FFFFFF"
    altText: "XAI logo"
  description:   >-
    ## Welcome to XAI Validate  
    
    XAI Validate is powered by [Tic:Toc](https://tictoc.ai), a technology solutions company providing innovative products to make financial services processes faster, smarter and simpler.
    
    
    XAI Validate solves for digital financial data validation using Explainable Artificial Intelligence (XAI) models to distil and render the customers’ financial data into an application decision summary. It is powered by a set of sophisticated normalisation, categorisation and assessment models, supported by an intuitive user interface that allows assessors to interact with and understand your customers' financial data. This will dramatically reduce the time required for assessment and to increase conversion, while ensuring process assurance and credit quality. We prove all technology against our direct to consumer home loans business, [Tic:Toc Home Loans](https://tictoc.com.au/).
     
    If you're a lender you can use XAI Validate in two ways:
      - **Detect and Position** (Actuals only): instantly identify income, expenses, assets and liabilities, behavioural and risk insights.
      - **Verify and Decision** (Stated vs Actuals): ingest and verify customers’ declared financials against the actual financial position identified in the data. This also allows you to configure your credit policy automating responsible lending assessment decisions.      
      
    XAI Validate supports a range of data sources including:
      - popular data aggregators
      - connect your own data
      - Consumer Data Right support (coming soon!)
          
    ## Getting Started  
    
    The XAI Validate API provides a way to seamlessly integrate assessment of financial poistion into your workflow. The table below provides a summary of endpoints, which allow you to get "data in" and then "data out". You can use the [XAI Validate user interface](https://app.tictoc.ai) at any time to interact with your data and the automated assessment of financial position.
      
    You'll need the following to start developing:
      - sign-up for XAI Validate. [Contact us](mailto:enterprise@tictoc.ai) to discuss the right product and access to our `sandbox`
      - your client credentials for the XAI Validate user interface and API. These will provided to you by Tic:Toc, and must be stored securely
      - you're then ready to start developing against our test environment using the endpoints below. 
      

      | Endpoint Name| Description |
      |-----|-----|
      | [`/application/create`](#/financialvalidation/application/create) | Create an application linking your applicants, and their external data aggregator reference identifiers.  |
      | [`/application/manage`](#/financialvalidation/application/manage) | Update an existing application including adding "declared/stated" financials, updating applicant details or adding new external data aggregator reference identifiers.  |
      | [`/application/get`](#/financialvalidation/application/get) | Retrieve an existing application using an application reference number.  |
      | [`/application/beginurl/get`](#/financialvalidation/application/beginurl/get) | Retrieve a secure url to begin T3 applications.  |
      | [`/provideaccounts`](#/financialvalidation/provideaccounts) | Connect your customers' account and transaction data against an existing application and applicant. This is ideal if you've sourced your own raw transaction data from core systems or through Open Banking.  |
      | [`/application/getstatus`](#/application/getstatus) |  Monitor the progress of automated financial assessment.  |
      | [`/result/getsummary`](#/result/getsummary)| Retrieve the results of automated financial assessment. The endpoint will surface automated assessments against your configured credit policy (where relevant), and validation figures for income, expenses, assets and liabilities. |
      | [`/serviceability/getserviceability`](#/serviceability/getserviceability)| Calculate serviceability for your application including income, expense, debt, borrowing amount and ratios. |
      | [`/serviceability/scenario/potentialmaxborrowing`](#/serviceability/scenario/potentialmaxborrowing) | Calculates the maximum potential borrowing amount based on the configuration of an ideal scenario.  |
      | [`/token`](#/token) | XAI Validate uses OAuth2 authentication. Every time you call these endpoints you'll need to ensure you have a valid token.  |
      | [`/credit/enquiry`](#/credit/enquiry) | (Coming soon!) Make a credit enquiry based on key identifying information for an applicant.  |
      | [`/credit/getenquiry`](#/credit/getenquiry) | (Coming soon!) Retrieve the results of a credit enquiry detailing accounts and liabilities for an applicant.  |
      | [`/credit/getsummary`](#/credit/getsummary) | (Coming soon!) Retrieve the summary of credit policy rules applied to the credit enquiry for an applicant.  |
      | [`/document/upload`](#/document/upload) | Upload a document to an application or applicant. This endpoint returns a pre-signed URL to upload the document.  |
      | [`/document/get`](#/document/get) | Retrieve information about a specific document linked to an application or applicant.  |
      | [`/document/getlist`](#/document/getlist) | Retrieves the list of documents for an application or applicant.  |
      | [`/document/download`](#/document/download) | Retrieves the pre-signed URL to download the document.  |
      | [`/property/postcode/get`](#/property/postcode/get) | Retrieves the category of a postcode.  |     

    ## Data Model  
      
    When you interact with the XAI Validate user interface and APIs you'll notice there's a clear structure to the data. We've designed the XAI Validate data model to be optimised for automating assessment of financial position. The data hierarchy is:
      - **application**: this is the structure that holds all other elements and represents a point-in-time product application from your customer
      - **applicants**: an application can have one or more applicants (currently limited to two). Applicants can belong to multiple applications, e.g. a customer applying for a credit card and a home loan would exist in two applications
      - **households**: your applicants belong to households. For convenience we will assign applicants to a single, default household at the start of application
      - **accounts**: applicants own accounts, which can be held individually or jointly with the other  applicant on the application
      - **transactions**: these are the credits and debits against each account. Transactions are enriched with attributes such as categories, high risk flags and expense management. 
      - **documents**: each application and applicant can have a document linked, each with a defined type and format.
      
    ## References
    
    Here are a few resources to help you on your way:
      - **User guide**: you can access this through the XAI Validate application. Simply login and navigate to your name in the top right.
      - **SDKs**: coming soon
      - **Postman 'Collection'**: download this collection to help you interact with the XAI Validate APIs using Postman (coming soon).
      
  contact:
    name: Tic:Toc Enterprise
    url: https://api.tictoc.ai/public/v1.0/
    email: enterprise@tictoc.ai
  version: 1.0.0
servers:
- url: https://api.stage.tictoc.ai/public/v1.0/
  description: Test server
- url: https://api.tictoc.ai/public/v1.0/
  description: Production server
paths:
  /token:
    post:
      tags:
      - Authentication
      summary: Retrieve OAuth2 token using client credentials.
      servers:
      - url: https://auth.stage.tictoc.ai/oauth2
        description: Test authorisation server
      - url: https://auth.tictoc.ai/oauth2
        description: Production authorisation server
      description: >-
        Before you can call the XAI Validate endpoints, you need to authenticate via the `/token` API. Successful authentication will return a token that can then be used to authorise your access to functional APIs. You'll need to include this token in the `Authorization` header in your calls.
          
        The `/token` API URL includes values in the query path. The URL will look like this:        
          `https://{host}/oauth2/token?grant_type=client_credentials`

        The `host` value will either be `auth.tictoc.ai` for production or `auth.stage.tictoc.ai` for testing.

        You'll also need to include information in your headers:
          - `Authorization`: Base64 encoded `client_id` and `client_secret` provided to you by the XAI Validate team as part of onboarding. The format is: `"Basic {client_id}:{client_secret}"`
          - `Content-Type`: the value is `"application/x-www-form-urlencoded"`

        **Remember, your API credentials must be kept safe and secure. Do not share these or publish to publicly accessible locations such as your client-side code or GitHub.**
        
      operationId: getToken
      security:
        - tokenAuth: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                  example: client_credentials
              required:
                - grant_type
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseGetToken'
        400:
          description: Invalid client credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseGetToken400'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseGetToken401'
        422:
          description: Unable to create token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
  /financialvalidation/application/create:
    post:
      tags:
      - Application
      summary: Create an application with up to two applicants and their external data aggregator references.
      description:  >-
        This endpoint allows you to create an "application", which is the object that holds all elements and represents a point-in-time product application from your customer. XAI Validate assigns each application a unique `ApplicationReferenceNumber` (Arn). You can use this value for subsequent calls.
          
          
        When you create an application you determine the data sources and data validation type you need, namely:
         1. "Detect and Position" or "Verify and Decision": do you want XAI Validate to identify your customers' financial position and provide you with the insights or do you want XAI Validate to automate financial validation decisioning for you? If you choose a "Verify and Decision" approach you need to provide your customers' "declared" financials to the [`/application/manage`](#/application/manageApplicationFinancials) endpoint.
         2. your customers: you can link one or more applicants to an application. XAI Validate will combine any jointly held accounts as part of the linking process.
         3. your customer data source: XAI Validate supports multiple data sources. See the table below for more information.
           
          
        The table below lists the parameters you need to populate based on your data validation choice above:
        
          | Function | Description |
          |-----|-----| 
          | `ApplicationContacts` | These are the applicants applying for your product. XAI Validate currently supports up to two applicants.|
          | `ExternalDataId`| This is the reference information for your existing data aggregator. XAI Validate currently supports multiple data sources - see the table below for information.|
          | `ExternalApplicationReferenceNumber`| This is an application reference from your own system to allow you to easily correlate the XAI Validate `ApplicationReferenceNumber` with your own records.|
          | `IsActualsOnly`| This parameter is only used by those clients that require a "verify and decision" approach to financial assessment. By setting this boolean to `false` these customers can then call the [`/application/manage`](#/application/manage) endpoint to add their applicants' "declared" or "stated" financials. This value will default to `true` meaning XAI Validate will return your applicants' "actual" financial position from the data. If don't pass a value for `IsActualsOnly`, then automated assessment will be triggered when you receive a successful response. If you're passing `"IsActualsOnly": false` then automated assessment will wait for you provide your applicants' "declared" financials via the [`/application/manage`](#/application/manageApplicationFinancials) endpoint.|
          | `Lender`| This optional parameter can be used to drive the credit policy against which you would like your application assessed. The code will be defined as part of your onboarding process. |
          
          
        XAI Validate supports multiple data sources. The table below describes the supported data sources and the request specifics. Depending on your XAI Validate client setup you will be able to use two data sources by  default - your chosen data aggregator and the connect your own data options:
            
            
          | Data Source | `DataProviderName` | `DataProviderReference` | Details |
          |-----|-----|-----|-----|
          | illion ODS BrokerFlow | `ODS` | A list of your BrokerFlow `DocumentIds`| You can provide multiple `DocumentIds` for each applicant. |
          | illion ODS MultiBank | `MB` | None | A unique URL will be returned when you call the endpoint, which your customers can use to link their accounts. Their data will automatically synch with your XAI Validate application. |
          | Yodlee v1.1 | `YOD11` | A list of your Yodlee customer identifiers. | You should have a one to one linking of applicant to Yodlee customer identifier. |
          | Basiq (coming soon!) | `BSQ` | A list of your Basiq customer identifiers. | You should have a one to one linking of applicant to Basiq customer identifier. |
          | Connect your own data | `EXT` | None | By selecting `EXT` you will be required to upload your data to the application. Please see [`/financialvalidation/provideaccounts`](#/financialvalidation/provideaccounts) for more information. |  
        
      operationId: createApplication
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true
      requestBody:
        description: The JSON request body for the POST.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCreateApplication'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCreateApplication'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
        422:
          description: Unable to create application.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
      x-codegen-request-body-name: RequestBody
  /financialvalidation/application/manage:
    post:
      tags:
      - Application
      summary: Add or change "stated/declared" financials for an existing application,
        or link additional data aggregation sessions.
      description:  >-
    
        This versatile endpoint allows you to perform the following functions against an existing application:
          
          | Function | Description |
          |-----|-----|        
          | Add/edit "stated/declared" financials against an application | This is only relevant if you require a "declare and verify" approach to financial assessment, and have passed the `"IsActualsOnly": false` parameter in your [`/application/create`](#Application/Create) request.|
          | Link additional data source to an application |This is useful when your applicants provide additional bank account information thorugh your data aggregator, and you need to rerun the automated assessment. Please see the table below for data source details. |
          | Add/edit applicants within an application| Add new applicants or edit existing. |
         
        When you call the endpoint, automated assessment will commence once you receive a successful response. You can monitor the progress using the [`/application/getstatus`](#/application/getstatus) endpoint. However, you can control when the automated assessments is started by using the `ApplicationStatus` parameter:
          - `Commenced`: hold automated assessment until you're ready. This is helpful if you're gradually building an application object as your customer completes their application.
          - `Assess`: trigger automated asssessment. As this is an optional parameter, `Assess` is the default status.
            
        Please note the assessment levels XAI Validate currently supports for providing "stated/declared" financials. These have been designed in line with lending best practices:
          
          | Assessment Level | Financial Types |
          |-----|-----|
          | `Application` | These are application-level financials (`DeclaredFinancialsApplication`) and currently accommodate  `AssetsCash` for assessment of your applicants' deposit|
          | `Household` | Your applicants will belong to `Households` and the `DeclaredFinancialsHousehold` object currently supports `ExpensesMonthly` for your applicants' household's monthly expenses |
          | `Applicant` | These are the applicant-specific financials, which includes a `IncomeSalary` figure, a list of `IncomeRental` values,  a list of `LiabilitiesHomeLoans` values, and single values for `LiabilitiesCreditCard*` and `LiabilitiesPersonalLoan*`|
         
         
        XAI Validate supports multiple data sources. The table below describes the supported data sources and the request specifics. Depending on your XAI Validate client setup you will be able to use two data sources by  default - your chosen data aggregator and the connect your own data options:
            
            
          | Data Source | `DataProviderName` | `DataProviderReference` | Details |
          |-----|-----|-----|-----|
          | illion ODS BrokerFlow | `ODS` | A list of your BrokerFlow `DocumentIds`| You can provide multiple `DocumentIds` for each applicant. |
          | illion ODS MultiBank | `MB` | None | A unique URL will be returned when you call the endpoint, which your customers can use to link their accounts. Their data will automatically synch with your XAI Validate application. |
          | Yodlee v1.1 | `YOD11` | As list of your Yodlee customer identifiers. | You should have a one to one linking of applicant to Yodlee customer identifier. |
          | Basiq (coming soon!) | `BSQ` | As list of your Basiq customer identifiers. | You should have a one to one linking of applicant to Basiq customer identifier. |
          | Connect your own data | `EXT` | None | By selecting `EXT` you will be required to upload your data to the application. Please see [`/financialvalidation/provideaccounts`](#/financialvalidation/provideaccounts) for more information. |  
        
      operationId: manageApplicationFinancials
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true
      requestBody:
        description: The JSON request body for the POST.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestManageApplicationFinancials'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseManageApplicationFinancials'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
        422:
          description: Unable to create application.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
      x-codegen-request-body-name: RequestBody
  /financialvalidation/application/get:
    post:
      tags:
      - Application
      summary: Retrieves an existing application based on a unique identifier.
      description:  >-
        This endpoint allows you to retrieve an "application". 
        
        The application is retrieved using a `ApplicationReferenceNumber` (Arn) that is made available when creating your application.
        
      operationId: getApplication
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true
      requestBody:
        description: The JSON request body for the POST.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestGetApplication'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseGetApplication'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
        422:
          description: Unable to retrieve application.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
      x-codegen-request-body-name: RequestBody
  /financialvalidation/application/beginurl/get:
    post:
      tags:
      - Application
      summary: Retrieve a secure URL to begin or resume a customer application.
      description:  >-
        This endpoint allows you to retrieve an `ApplicationBeginUrl`. This allows customers to securely begin or resume an application form session. It contains a "token" that is valid for 2 hours by default.
          
        The application begin url is retrieved using a `ApplicationUniqueNumber` that is made available when creating your application.
          
        This endpoint is only relevant to our "platform as a service" partners.
        
      operationId: getApplicationBeginUrl
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true
      requestBody:
        description: The JSON request body for the POST.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestGetApplicationBeginUrl'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseGetApplicationBeginUrl'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
        422:
          description: Unable to retrieve application begin url.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
      x-codegen-request-body-name: RequestBody
  /financialvalidation/provideaccounts:
    post:
      tags:
      - Application
      summary: Connect your own account and transaction data to an applicant.
      description:  >-
    
        This endpoint allows you to submit your customers' account and transaction data against an existing application and applicant. This is ideal if you've sourced your own raw transaction data from core systems or through Open Banking.
          
        This option will be available if you have have provided the `"DataProviderName": "EXT"` value to either [`/application/create`](#/Application/Create) or [`/application/manage`](#/application/manageApplicationFinancials) endpoints.
          
        There are four steps to linking your own data to your applicants. 
          1. create your application through [`/application/create`](#/Application/Create). You'll need to set the following value in the request - `"DataProviderName": "EXT"`
          2. call this endpoint with a `POST` method and  your `ApplicationReferenceNumber` and a list of `ApplicationContacts` you wish to load data against.
          3. the response will return a one-time URL for each applicant in your request.
          4. call the one-time URL returned above with a `PUT` method, providing the account and transaction data in the body in the format shown in . You'll need to call this endpoint for each applicant.
          
        Once your customers' data has been uploaded the financial validation process will be triggered. You can monitor progress through  [`/financialvalidation/application/getstatus`](#/getFinancialValidationJob) and retrieve results from  [`/financialvalidation/result/getsummary`](#/getResultsSummary).

      operationId: manageAccountTransaction
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true
      requestBody:
        description: The JSON request body for the POST.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestProvideAccounts'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProvideAccounts'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
        422:
          description: Unable to link data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
      x-codegen-request-body-name: RequestBody
  /{UploadUrl}:
    put:
      tags:
      - Application
      summary: Upload your customer's data using a one-time unique URL.
      description:  >-
    
        This endpoint allows you to upload your customers data in a specific format. The unique upload URL will be returned in the [`/financialvalidation/provideaccounts`](#/manageAccountTransaction) endpoint response. A unique URL will be returned per applicant.
          
        Please note:
        * you will `PUT` the object to the `UploadUrl` directly, not to the XAI Validate endpoint.
        * no headers are required in the `PUT`.
          
        Once you have successfully uploaded the data, the automated financial validation process will be triggered.
           
        You can submit multiple accounts across financial institutions in a single request. The table below summarises the rquired request parameters at the `Account` and `Transaction` level:
          
          | Object Type| Required Parameters |
          |-----|-----|
          | `Account` | `AccountNumber`, `AccountName`, `CurrentBalance` |
          | `Transactions` | `TransactionPostedOn`, `TransactionDescription`, `TransactionAmount` |
        

      operationId: uploadAccountTransaction
      parameters:
        - in: path
          name: UploadUrl
          schema:
            type: string
          required: true
      requestBody:
        description: The JSON request body for the PUT.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUploadAccountTransaction'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUpload'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
        422:
          description: Unable to link data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
      x-codegen-request-body-name: RequestBody
  /enrichment/categorise:
    post:
      tags:
      - Transactions
      summary: Categorise and enrich expense transactions.
      description:  >-
    
        This endpoint allows you to enrich raw expense transaction data with the following:
          * **category**: the LIXI Living Expense aligned expense category, including a prediction probability
          * **discretionary expense** (coming soon): an indicator as to whether the expense is discretionary spend, including a prediction probability
          * **expense merchant** (coming soon): the merchant for where the transaction was made
          * **high risk cash withdrawal** (coming soon): indicator as to whether the cash withdrawal is may be risky (one of multiple on the same day, greater than $2,000 or one of a series of cash withdrawals representing greater than 10% of the months' expenses)
          * **high risk merchant** (coming soon): an indicator as to whether the merchant is one of a configurable list of potentially risky merchants (e.g. gambling)
          * **adverse** (coming soon): indicator as to whether the transaction indicates potentially adverse behaviour (e.g. direct debit dishonour).
          * **internal transfer** (coming soon): indicator as to whether the transaction is an internal transfer.
            
        Here are a few important technical notes to remember:
          * this endpoint is synchronous, with results returned within seconds of your request
          * no data is persisted - each expense you provide is enriched, a response returned and that's it! No data is saved besides the metadata of your request (e.g. when, number of accounts, number of transactions)
          * only expenses are accepted (that is, `TransactionAmount` less than $0). If you provide credit transactions in your request, these will not be included in the response
          * a maximum of 5 accounts can be submitted in a single request
          * a total of 2,000 transactions can be submitted in a single request
           
        The request supports multiple account and transaction elements, and is consistent with the [`/financialvalidation/provideaccounts`](#/manageAccountTransaction) format. However, you don't need to supply all these elements. Below is an example of the minimal request:
          * `AccountType`: you must specify this for each list of transaction. If you don't know you can simply provide `NOTMATCHED`. The options are `TRANSACTION`, `CREDITCARD`, `HOMELOAN`, `PERSONALLOAN`
          * `TransactionPostedOn`: the date of the transaction within the `Transactions` list
          * `TransactionDescription`: the raw transaction description
          * `TransactionAmount`: the raw transaction amount with its sign. Remember, only expenses (amount < $0) are categorised by this endpoint.
      operationId: enrichExpenses
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true
      requestBody:
        description: The JSON request body for the POST.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEnrichExpense'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEnrichExpense'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
        422:
          description: Unable to link data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
      x-codegen-request-body-name: RequestBody
  /financialvalidation/result/getsummary:
    post:
      tags:
      - Results
      summary: Retrieve a summary of XAI Validate automated assessment of financial
        position.
      description: >-
      
        This endpoint includes the automated assessment of financial position results. It reflects the automated assessment, and any of your users' interaction with the data in the XAI Validare UI. Using this endpoint you'll be able to retrieve a comprehensive assessment of your applicants' income, expenses, assets, liabilities and any behavioural flags such as high risk transactions or arrears events.
          
        The table below summarises the key objects returned:
          
          | Object | Description |
          |-----|-----|   
          | `AssessmentSummary` | This list of objects is tailored to those clients undertaking "declare and verify" financial assessment. Each object in the list will align to a client-specific credit policy setting, including an automated decision outcome, the applicant's "declared" financials, the "actual" financials found by XAI Validate and any "reviewed" financials from your users' interaction with the XAI Validate user interface.|
          | `ApplicationResults` | This object includes the results for application-specific automated assessments, specifically your applicants' total asset position (i.e. deposit).|
          | `HouseholdResults` | This object includes key descriptive statistics from the XAI Validate assessment of household-specific expenses including non-discretionary, discretionary and any removed expenses. |
          | `ApplicationContactResults` | This object contains detailed information about the XAI Validate assessment of your applicants' financial position. Individual objects will be returned for income (salary, rental and other), home loans, credit cards and personal loans. |
        
      operationId: getResultsSummary
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true
      requestBody:
        description: The JSON request body for the POST.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestGetResultsSummary'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseGetResultsSummary'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
        422:
          description: Unable to create application.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
      x-codegen-request-body-name: RequestBody
  /financialvalidation/result/getexpensesummary:
    post:
      tags:
      - Results
      summary: Retrieve a summary of actual expenses by your configured assessment category
        position.
      description: >-
      
        This endpoint provides you with a breakdown of expenses by household and category. The expense categories will align to your own custom categories, where configured. If none are configured we will return expense summary by the LIXI Living Expense aligned XAI Validate "assessment category".
          
        You can retrieve the expense summary by passing through the `ApplicationReferenceNumber` returned when you created your application. The response body will summarise expenses by household and category, including:
          - Non-discretionary expenses: the total value, volume, count and share of expenses deemed to be non-discretionary
          - Discretionary expenses: the total value, volume, count and share of expenses deemed to be discretionary
          - Removed expenses: the total value, volume, count and share of expenses removed from the expense assessment process
          - Totals: the date range, total volume and value
        
      operationId: getExpenseSummary
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true
      requestBody:
        description: The JSON request body for the POST.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestGetResultsSummary'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseGetExpenseSummary'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
        422:
          description: Unable to get results.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
      x-codegen-request-body-name: RequestBody  
  /financialvalidation/application/getstatus:
    post:
      tags:
      - Jobs
      summary: Get the job processing status of financial validation
      description: >-
        Retrieve the status of your automated financial assessment process. Financial validation has a diverse range of activities from retrieving provider data, normalising accounts and transactions, through to automated assessment of financial position. A `GroupId` will be returned in the response for the following endpoints, which you can use to monitor progress:
          - [`/application/create`](#/application/create)
          - [`/application/manage`](#/application/manage)
          
          We will return an overall status of the financial validation tasks. The status codes are:
          - `READY` - task processing has not yet started 
          - `PROCESSING` - task processing is underway
          - `COMPLETED` - task processing has completed successfully
          - `SUPERSEDED` - a subsequent validation job has taken precendence over an existing job
          - `FAILED` - a task has failed processing. XAI Validate will retry the task, so continue to monitor
          - `DEAD` - oops... something's gone wrong. No further processing takes place - we'll monitor the system for these issues.
        
      operationId: getFinancialValidationJob
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true
      requestBody:
        description: The JSON request body for the POST.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestJobsFinancialValidation'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseJobsFinancialValidation'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
        422:
          description: Unable to get insurance insights for application.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
      x-codegen-request-body-name: RequestBody
  /financialvalidation/status/subscribe:
    post:
      tags:
      - Jobs
      summary: Subscribe to notifications about the processing status of financial validation tasks.
      description: >-
        Use this webhook to subscribe to notifications about the processing status of key stages of the financial validation process. You can define your callback URL inside the XAI Admin user interface or by getting in touch with your account manager.
          
        The webhook will provide updates on progress for the following stages:
          - `Commenced`: the financial validation process has started. Tied to when you call the [`/application/create`](#/application/create) and [`/application/manage`](#/application/manage) endpoints
          - `Data`: the data retrieval and normalisation process has completed
          - `Categorised`: the categorisation stage of data enrichment has complected
          - `Expenses`: the automated expense assessment process has completed
          - `Income`:  the automated income assessment process has completed
          - `Liabilities`: the automated customer liabilities assessment process has completed
          - `Assets`: the automated customer assets assessment process has completed
          - `Serviceability`: where enabled, the serviceability results using "declared" financials are ready
          - `Finalised`: the entire financial validation process has completed

        For each notification a status will be returned:
          - `COMPLETED` - task processing has completed successfully
          - `DEAD` - oops... something's gone wrong. No further processing takes place - we'll monitor the system for these issues.
        
      operationId: notifyFinancialValidationStatus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestWebhookStatusNotification'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWebhookStatusNotification'
      callbacks:
        status/notify:
          '{$request.body#/CallbackUrl}':
            post:
              requestBody: 
                required: true
                description: The JSON request body notification POST.
                content:
                  application/json:
                    schema:
                      required:
                      - ApplicationReferenceNumber
                      - ProcessingStatus
                      - RequestCreatedOn
                      - RequestLastUpdatedOn
                      - GroupId
                      - AssessmentType
                      type: object
                      properties:
                        ApplicationReferenceNumber:
                          type: string
                          description: Unique XAI Validate application reference number (Arn). Results
                            for one application can be retrieved at a time.
                          example: AABB12345
                        ProcessingStatus:
                          type: string
                          description: The processing status of the particualar assessment task.
                          enum:
                          - COMPLETED
                          - DEAD
                        RequestCreatedOn:
                          type: string
                          format: date-time
                        RequestLastUpdatedOn:
                          type: string
                          format: date-time
                        GroupId:
                          type: string
                          description: Unique GroupId for the financial validation job.
                          example: AABB12345-3fa85f64-5717-4562-b3fc-2c963f66afa6
                        AssessmentType:
                          type: string
                          description: The name of the financial validation task being executed.
                          enum:
                          - Commenced
                          - Data
                          - Categorised
                          - Assets
                          - Liabilities
                          - Income
                          - Expenses
                          - Serviceability
                          - Finalised
              responses:
                '200':
                  description: OK       
      x-codegen-request-body-name: RequestBody
  /serviceability/getserviceability:
    post:
      tags:
      - Serviceability
      summary: Get serviceability metrics for an application and its applicants.
      description:  >-
        
        This endpoint allows you to get serviceability metrics for your applications. 
          
        By passing the `ApplicationReferenceNumber` for an existing application this endpoint will return accurate serviceability results using your configured policy settings and any assessment changes your users have made through the user interface.
          
        In each request you can provide a list of new facilities, for which serviceability metrics will be returned. 
          
        You will be required to supply the following required information:
          * `ApplicationReferenceNumber`: this will extract validated financials from the application object from earlier processes.
          * `ConfigurationSet`: the lending policy configuration for which you wish to calculate serviceability metrics. This will be the lender or product enumeration you have configured within XAI Validate.
          * `NewFacilities`: specifics of the new debt facilities. This is optional - the new facility information is set in the `application/manage` call.
          * `ValidationTypes`: the financial values type to consume within the serviceability calculations. You can specify the financial value type for `Income`, `Expenses` and `Liabilities`:
              * `STATED`: customer declared financials
              * `ACTUALS`: automatically detected financials from linked data
              * `VALIDATED`: user-validated data from assessment.
               
      operationId: serviceabilityMetrics
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true
      requestBody:
        description: The JSON request body for the POST.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestApplicationServiceability'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseApplicationServiceability'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
        422:
          description: Unable to create report.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
  /serviceability/scenario/potentialmaxborrowing:
    post:
      tags:
      - Serviceability
      summary: Calculates the maximum potential borrowing amount based on the configuration of an ideal scenario.
      description: >-
        This endpoint allows you to calculate how much an applicant(s) can afford in a best-case scenario for a 30-year loan where they have no unsecured liabilities and their expenses are at the Household Expenditure Measure (HEM) benchmark. Potential max borrowing amount is an API-only feature for our Serviceability customers. Note that this hypothetical scenario does not modify the application in any way.
        

        The `ApplicationReferenceNumber` and `Merchant`/`Lender` codes are required to use this endpoint. Optionally, you can indicate the desired `ValidationTypes` to use with the calculation. If `ValidationTypes` is not provided, the API will respond with results using `STATED`, `ACTUALS`, and `VALIDATED` figures.
        
        
        This max potential borrowing amount is determined by using the following data:
          * Flat HEM figure for expenses (e.g. this means we are not using the living expense formula, including the stated additional/non-basic expenses)
          * Reduced all unsecured liabilities limits to 0, this includes:
              * Personal Loans
              * Credit Cards
              * Lines of Credit
              * HECS Debt
          * Loan term of 30 years
          * Rate, which is the maximum of buffered or a floor rate.

        Investment Loans remain as they are in the application and are not reduced.

        The following information is required:
          * `ApplicationReferenceNumber`: to gather the financials of the  ValidationTypes indicated in the request from the application object from earlier processes.
          * `ConfigurationSet`: the lending policy configuration used to calculate serviceability metrics. This will be the lender or product enumeration you have configured within XAI Validate.
          * `ValidationTypes`: the financial values consumed within the potential max borrowing amount calculations. You can specify one or none of the validation types below:
              * `STATED`: customer declared financials
              * `ACTUAL`: automatically detected financials from linked data
              * `VALIDATED`: user-validated data from automated or manual assessment
              * `null`

      operationId: potentialmaxborrowing
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true
      requestBody:
        description: The JSON request body for the POST.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPotentialMaxBorrowing'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePotentialMaxBorrowing'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseGetToken401'
        422:
          description: Unable to create token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
  /credit/enquiry:
    post:
      tags:
      - Credit
      summary: (Coming soon!) Make a credit enquiry based on key applicant identifying information.
      description:  >-
        This endpoint allows you to perform a credit enquiry on behalf of an applicant". 
        
        Key identifying information must supplied to perform the enquiry. If the enquiry has been performed for the same applicant in the last 90 days, the most recent enquiry will be re-used.
        
      operationId: creditEnquiry
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true
      requestBody:
        description: The JSON request body for the POST.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCreditEnquiry'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCreditEnquiry'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
        422:
          description: Unable to retrieve application.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
      x-codegen-request-body-name: RequestBody
  /credit/getenquiry:
    post:
      tags:
      - Credit
      summary: (Coming soon!) Retrieve the results of a credit enquiry detailing accounts and liabilities for an applicant.
      description:  >-
        This endpoint allows you to retrieve the details extracted from the credit enquiry made on behalf of an applicant. 
        
        You must supply the CreditEnquiryId returned by the /credit/enquiry API call.
        
      operationId: getEnquiry
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true
      requestBody:
        description: The JSON request body for the POST.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCreditGetEnquiry'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCreditGetEnquiry'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
        422:
          description: Unable to retrieve application.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
      x-codegen-request-body-name: RequestBody
  /credit/getsummary:
    post:
      tags:
      - Credit
      summary: (Coming soon!) Retrieve the summary of credit policy rules applied to the credit enquiry for an applicant.
      description:  >-
        This endpoint allows you to retrieve the summary of the credit policy rules applied to the credit enquiry made on behalf of an applicant. 
        
        You must supply the CreditEnquiryId returned by the /credit/enquiry API call.
        
      operationId: getSummary
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true
      requestBody:
        description: The JSON request body for the POST.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCreditGetSummary'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCreditGetSummary'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
        422:
          description: Unable to retrieve application.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
      x-codegen-request-body-name: RequestBody
  /financialvalidation/sampleapplication/create:
    post:
      tags:
      - Testing
      summary: Create test applications using default or your own dummy data.
      description:  >-
        This endpoint allows you to create one or many test applications for your own internal testing purposes. The applications will be created in a "demonstration" client, ringfenced from your main applications. Key features include:
          
          1. automatic incrementing of dates relative the application creation date  
          2. use default account/transaction data or provide your own  
          3. choice of validation approaches.  
          
        
        The following parameters are required:
        
          | Parameter | Description |
          |-----|-----| 
          | `DemoApplicationsRequired` | The number of test applications to create.|
          | `IsStatedAndActual`| Boolean to indicate whether you want a "declare and verify" approach to validation (`true`) or "detect and position" (`false`).|
          | `CreateJointApplication`| Boolean to indicate whether you want a single or joint test application.|

        You can optionally provide the following request parameters:
        
          | Parameter | Description |
          |-----|-----| 
          | `ProvideAccounts` | Boolean as to whether you want to provide your own data or use the standard test data provided by XAI Validate. The default is `false`. If you specify `true` the response payload will include unqiue URLs against which you can `PUT` your own data. Please see [`/financialvalidation/provideaccounts`](#/manageAccountTransaction)|
          | `Lender`| Specify the lender code configured against your account to drive the validation use one of your credit policies.|

        The response will include your the `ApplicationReferenceNumber` (`Arn`) of your test application. If you specify `"ProvideAccounts": true` in the request, the response will also include the unique URL against which you can `PUT` your data (see  [`/financialvalidation/provideaccounts`](#/manageAccountTransaction)).
        
        
      operationId: createTestApplication
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true
      requestBody:
        description: The JSON request body for the POST.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestTestCreateApplication'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTestCreateApplication'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
        422:
          description: Unable to create application.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
      x-codegen-request-body-name: RequestBody
  /document/upload:
    post:
      tags:
      - Document
      summary: Get a link to upload a document to an application.
      description:  >-
        This endpoint returns a pre-signed URL to upload the document. You can upload the documents using this URL via the [`/{UploadDocumentUrl}`](#/{UploadDocumentUrl}) endpoint. 
        
        Your request must the `ApplicationReferenceNumber` and `DocumentName`. You must also include an enumeration for:
          - `FileType`
          - `DocumentType`
         
        The `FileType` is the MIME type of the document with enumerations:
        
          |`FileType` | Description|
          |-----|-----|
          |`application/msword` | Microsoft Word document |
          |`application/vnd.openxmlformats-officedocument.wordprocessingml.document` | Microsoft Word (docx) document |
          |`application/pdf` | PDF document |
          |`application/vnd.ms-excel` | Microsoft Excel document |
          |`application/vnd.openxmlformats-officedocument.spreadsheetml.sheet` | Microsoft Excel (xlsx) document |
          |`image/jpeg` | JPEG image |
          |`image/png` | PNG image |
          
          
        The `DocumentType` is used to index and specify the type of document being uploaded:
        
          | `DocumentType` | Description |
          |-----|-----|
          | `BS` | Bank Statement |
          | `CC` | Credit Card Statement|
          | `PS` | Payslip |
          | `TR` | Tax Return | 
          | `LS` | Loan Statement|
          | `HL` | Home Loan Statement|
          | `DEP` | Deposit Statement |
          | `PLS` | Personal Loan Statement| 
          | `VOI` | Verification of Identity |
          | `ID` | Identity Document |
          | `NOA` | Notice of Assessment |
          | `EM` | Email |
          | `CTR` | Company Tax Return |
          | `EC` | Employment Contract |
          | `AL` | Accountants Letter |
          | `VR` | Valuation Report |
          | `IL` | Investment Loan Statement |
          | `RENT` | Rental documentation |
          | `BONUS` | Bonus documentation|
          | `GOV` | Government Benefit |
          | `BRD` | Borrower Repayment Declaration |
          | `COS` | Contract of Sale |
          | `OTHER` | Other document |
      operationId: uploadDocument
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true
      requestBody:
        description: The JSON request body for the POST.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUploadDocument'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUploadDocument'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
        422:
          description: Unable to retrieve upload URL.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
      x-codegen-request-body-name: RequestBody
  /{UploadDocumentUrl}:
    put:
      tags:
      - Document
      summary: Upload document linked to an application.
      description:  >-
        This endpoint allows you to upload a document to an application. The unique upload URL will be returned in the [`/document/upload`](#/document/upload) endpoint response.
            
        Please note:
          * you will `PUT` the object to the `UploadDocumentUrl` directly, not to the XAI Validate endpoint.
          * no headers are required in the `PUT`.
          * the document `body` should be specified as `binary`.
      operationId: uploadDocumentLink
      parameters:
        - in: path
          name: UploadDocumentUrl
          schema:
            type: string
          required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUpload'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
        422:
          description: Unable to link data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
      x-codegen-request-body-name: RequestBody
  /document/getlist:
    post:
      tags:
      - Document
      summary: Get a list of documents linked to an application.
      description:  >-
        This endpoint allows you to retrieve a list of documents including their identifier. The identifier can then be used to download the document via the [`/document/download`](#/document/download).
          
        The `DocumentType` is defined as per the table below: 
        
          | `DocumentType` | Description |
          |-----|-----|
          | `BS` | Bank Statement |
          | `CC` | Credit Card Statement|
          | `PS` | Payslip |
          | `TR` | Tax Return | 
          | `LS` | Loan Statement|
          | `HL` | Home Loan Statement|
          | `DEP` | Deposit Statement |
          | `PLS` | Personal Loan Statement| 
          | `VOI` | Verification of Identity |
          | `ID` | Identity Document |
          | `NOA` | Notice of Assessment |
          | `EM` | Email |
          | `CTR` | Company Tax Return |
          | `EC` | Employment Contract |
          | `AL` | Accountants Letter |
          | `VR` | Valuation Report |
          | `IL` | Investment Loan Statement |
          | `RENT` | Rental documentation |
          | `BONUS` | Bonus documentation|
          | `GOV` | Government Benefit |
          | `BRD` | Borrower Repayment Declaration |
          | `COS` | Contract of Sale |
          | `OTHER` | Other document |

        If you have OCR enabled on your account, the `OcrStatus` will show tell you how the status of OCR processing: 
        
          | `OcrStatus` | Description |
          |-----|-----|
          | `CHECKING` | The document is being checked if it is supported for OCR processing |
          | `READY` | The document is ready to be processed |
          | `PROCESSING` | The document is processing |
          | `SUCCESS` | The document has successfully completed processing |
          | `FAILED` | The document has failed processing | 
          | `DEAD` | The document is dead and cannot be processed |
          | `UNSUPPORTED` | The document is not supported for OCR processing |
      operationId: getDocumentList
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true
      requestBody:
        description: The JSON request body for the POST.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestGetListDocument'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseGetListDocument'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
        422:
          description: Unable to retrieve documents.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
      x-codegen-request-body-name: RequestBody
  /document/get:
    post:
      tags:
      - Document
      summary: Get information about a document linked to an application.
      description:  >-
        This endpoint allows you to retrieve a document information by its identifier. This identifier can be retrieved from the [`/document/getlist`](#/document/getlist) endpoint.
          
        The `DocumentType` in the response is defined as per the table below:

          | `DocumentType` | Description |
          |-----|-----|
          | `BS` | Bank Statement |
          | `CC` | Credit Card Statement|
          | `PS` | Payslip |
          | `TR` | Tax Return | 
          | `LS` | Loan Statement|
          | `HL` | Home Loan Statement|
          | `DEP` | Deposit Statement |
          | `PLS` | Personal Loan Statement| 
          | `VOI` | Verification of Identity |
          | `ID` | Identity Document |
          | `NOA` | Notice of Assessment |
          | `EM` | Email |
          | `CTR` | Company Tax Return |
          | `EC` | Employment Contract |
          | `AL` | Accountants Letter |
          | `VR` | Valuation Report |
          | `IL` | Investment Loan Statement |
          | `RENT` | Rental documentation |
          | `BONUS` | Bonus documentation|
          | `GOV` | Government Benefit |
          | `BRD` | Borrower Repayment Declaration |
          | `COS` | Contract of Sale |
          | `OTHER` | Other document |
      operationId: getDocument
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true
      requestBody:
        description: The JSON request body for the POST.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestGetDocument'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseGetDocument'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
        422:
          description: Unable to retrieve document.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
      x-codegen-request-body-name: RequestBody
  /document/download:
    post:
      tags:
      - Document
      summary: Get a link to download a specific document linked to an application.
      description:  >-
        This endpoint generates a pre-signed URL to download a document. The is then used with the [`{DownloadDocumentUrl}`](#{DownloadDocumentUrl}) call.
        
      operationId: downloadDocument
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true
      requestBody:
        description: The JSON request body for the POST.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestDownloadDocument'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDownloadDocument'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
        422:
          description: Unable to download document.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
      x-codegen-request-body-name: RequestBody
  /{DownloadDocumentUrl}:
    get:
      tags:
      - Document
      summary: Download document linked to an application.
      description:  >-
        This endpoint allows you to download a document linked to your application. The unique download URL will be returned in the [`/document/download`](#/document/download) endpoint response. 
         
        Please note:  
          * you will `GET` the object from the `DownloadDocumentUrl` link directly.
          * no headers are required in the `GET`.
          * no `body` required.
      operationId: downloadDocumentLink
      parameters:
        - in: path
          name: DownloadDocumentUrl
          schema:
            type: string
          required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUpload'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
        422:
          description: Unable to link data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
      x-codegen-request-body-name: RequestBody

  /property/postcode/get:
    post:
      tags:
      - Property
      summary: Get postcode category for valuation purposes.
      description:  >-
        This endpoint allows you to retrieve the category of an Australian postcode and property type for valuation purposes. This is used to determine the property's suitability under your credit policy.
          
        The request requires at minimum the `Lender` code, which represents your relevant credit policy and the `Postcode` string. You can additionally filter by `PropertyType`, which has the enumerations below. 
           
          | `PropertyType` | Description |
          |-----|-----|
          |`APARTMENT`|A single apartment with in a property or building|
          |`FLATS`|A single flat with in a property or building|
          |`HOUSE`|A freestanding house|
          |`TOWNHOUSE`|A self-contained property, sometimes attached and sometimes freestanding, within a complex of three or more dwellings|
          |`UNIT`|A single unit with in a property or building|
            
        The response will return the relevant credit policy `PostcodeCategory` and `PostcodeType` for your request. If `PropertyType` is not provided in the request, then an object per `PropertyType` containing the `PostcodeCategory` and `MinimumValuationRequired` will be returned.
          
        The `MinimumValuationRequired` values are:
           
          | `MinimumValuationRequired` | Description |
          |-----|-----|
          |`AVM`|Automated Valuation Model|
          |`EVR`|Electronic / desktop valuation report |
          |`FV`|A full valuation report|
          |`PC`|A purchase contract|

            
      operationId: getPostcodeCategory
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true
      requestBody:
        description: The JSON request body for the POST.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestGetPostcodeCategory'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseGetPostcodeCategory'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
        422:
          description: Unable to retrieve postcode category.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRequestError'
      x-codegen-request-body-name: RequestBody
components:
  schemas:
    ResponseGetToken:
      required:
      - access_token
      - expires_in
      - token_type
      type: object
      properties:
        access_token:
          type: string
          description: Access token linked to Client Id containing user permissions.
        expires_in:
          type: number
          description: Seconds until the token expires.
        token_type:
          type: string
          description: Always "Bearer", with current default of 60 minutes (3,600
            seconds).
          enum:
          - Bearer
    ResponseGetToken400:
      required:
      - error
      type: object
      properties:
        error:
          type: string
          description: Description of the error.
          enum:
          - invalid client
    ResponseGetToken401:
      required:
      - error
      type: object
      properties:
        error:
          type: string
          description: Description of the error.
          enum:
          - unauthorized
    RequestCreateApplication:
      required:
      - Application
      type: object
      properties:
        Application:
          description: Request object containing Application Create payload.
          type: object
          properties:
            ExternalApplicationReferenceNumber:
              type: string
              description: Unique application identifier from your own system.
            ApplicationContacts:
              type: array
              description: Object containing applicant information.
              items:
                type: object
                required:
                - EmailAddress
                - FirstName
                - Surname
                - ExternalDataId
                properties:
                  EmailAddress:
                    type: string
                    description: Applicant email address - this is required.
                  FirstName:
                    type: string
                    description: Applicant first name - this is required.
                  Surname:
                    type: string
                    description: Applicant last name - this is required.
                  PhoneNumber:
                    type: string
                    description: Applicant phone number.
                  ExternalDataId:
                    type: object
                    required: 
                    - DataProviderName
                    properties:
                      DataProviderName:
                        type: string
                        description: Name of your data provider. Currently accepted
                          values are `YOD11` (for Yodlee API 1.1), `ODS` for illion ODS, `MB` for illion ODS BankStatements "Multibank", `EXT` if you wish to connect your own data.
                        enum:
                        - YOD11
                        - ODS
                        - EXT
                        - MB
                      DataProviderReference:
                        type: array
                        description: List of external reference identifiers for your
                          data provider.
                        items:
                          type: string
            IsActualsOnly:
              type: boolean
              description: "Boolean value indicating if the application requires a\
                \ \"declare/stated\" versus \"actual\" automated assessment. This\
                \ value defaults to `true` meaning that XAI Validate will always return\
                \ \"actual\" automated assessment. If this aligns to your use case,\
                \ then this parameter can be omitted. If you do need to provide \"\
                declare/stated\", then you need to provide this parameter with a `false`\
                \ value. Your \"declare/stated\" can then be added to the application\
                \ at in the [`/application/manage`](#/application/manage) endpoint.\n\
                \n                         "
        Lender:
          type: string
          description: This optional parameter can be used to drive the credit policy against which you would like your application assessed. The code will be defined as part of your onboarding process.
          example: YourLenderCreditPolicyCode
    ResponseCreateApplication:
      required:
      - Applicants
      - ApplicationReferenceNumber
      - CreatedOn
      - RequestId
      type: object
      properties:
        ApplicationReferenceNumber:
          type: string
          description: Unique XAI Validate Application Reference Number (Arn).
        CreatedOn:
          type: string
          description: Timestamp indicating when the application was created.
          format: date-time
        RequestId:
          type: string
          description: Unique identifier for the request
          example: RojLCjD-ywPPMNg=
        Applicants:
          type: array
          description: List of objects indicating applicants included within the application.
          items:
            required:
            - EmailAddress
            type: object
            properties:
              EmailAddress:
                type: string
                description: Email address of the applicant.
              ContactId:
                type: integer
                description: Unique identifier for the contact record created for your applicant.
              LinkUrl:
                type: string
                description: Unique customer data linking URL for illion ODS "MultiBank customers"
                example: http://scv-test.bankstatements.com.au/NNNN-NNNN123456AA_1?ip=FFAABB-CC-DD-AA-BB
    RequestManageApplicationFinancials:
      $ref: '#/components/schemas/ApplicationSchema'
      description: Request object containing Application Create payload.
    ResponseManageApplicationFinancials:
      allOf:
        - $ref: '#/components/schemas/ApplicationSchema'
        - $ref: '#/components/schemas/ResponseManageApplicationFinancialsBase'
    ResponseManageApplicationFinancialsBase:      
      required:
      - Applicants
      - ApplicationReferenceNumber
      - CreatedOn
      - RequestId
      type: object
      properties:
        ApplicationReferenceNumber:
          type: string
          description: Unique XAI Validate Application Reference Number (Arn).
        CreatedOn:
          type: string
          description: Timestamp indicating when the application was created.
          format: date-time
        LastUpdatedOn:
          type: string
          description: Timestamp indicating when the application was last updated.
          format: date-time
        RequestId:
          type: string
          description: Unique identifier for the request
          example: RojLCjD-ywPPMNg=
        GroupId:
          type: string
          example: AABB112233-3fa85f64-5717-4562-b3fc-2c963f66afa6
          description: 'Unique grouping identifier which can be used to check the
            over financial validation status through the [`/jobs`](#/application/getstatus)
            endpoint. '
        ExternalApplicationReferenceNumber:
          type: string
          description: Your application reference number where provided.
        Applicants:
          type: array
          description: List of objects indicating applicants included within the application.
          items:
            required:
            - EmailAddress
            type: object
            properties:
              EmailAddress:
                type: string
                description: Email address of the applicant.
              ContactId:
                type: integer
                description: Unique identifier for the contact record created for
                  your applicant.
              LinkUrl:
                type: string
                description: Unique customer data linking URL for illion ODS "MultiBank customers"
                example: http://scv-test.bankstatements.com.au/NNNN-NNNN123456AA_1?ip=FFAABB-CC-DD-AA-BB
    RequestGetResultsSummary:
      required:
      - Application
      type: object
      properties:
        Application:
          type: object
          properties:
            ApplicationReferenceNumber:
              type: string
              description: Unique XAI Validate application reference number (Arn).
                Results for one application can be retrieved at a time.
          description: Request object containing Application Create payload.
    ResponseGetResultsSummary:
      required:
      - Application
      type: object
      properties:
        Application:
          type: object
          properties:
            ApplicationReferenceNumber:
              type: string
              description: Unique XAI Validate application reference number (Arn).
                Results for one application can be retrieved at a time.
            ExternalApplicationReferenceNumber:
              type: string
              description: Unique application identifier from your own system.
          description: Request object containing Application Create payload.
        AssessmentSummary:
          type: array
          description: Financial Validate result objects for each automated assessment.
          items:
            type: object
            properties:
              FinancialValidateTypeName:
                type: string
                description: 'Name of the automated assessment result.   '
                enum:
                  - 'Adverse behaviour fee classification.'
                  - 'Adverse reversal transactions.'
                  - 'Credit card age validation.'
                  - 'Home loan age validation.'
                  - 'Transaction account age validation for salary.'
                  - 'Personal loan age validation.'
                  - 'Credit card short term repayment arrears validation.'
                  - 'Credit card long term repayment arrears validation.'
                  - 'Credit card medium term repayment arrears validation.'
                  - 'Home loan short term repayment arrears validation.'
                  - 'Home loan long term repayment arrears validation.'
                  - 'Home loan medium term repayment arrears validation.'
                  - 'Personal loan short term repayment arrears validation.'
                  - 'Personal loan long term repayment arrears validation.'
                  - 'Personal loan medium term repayment arrears validation.'
                  - 'Associated home loan lender validation.'
                  - 'Credit card balance validation.'
                  - 'Credit card limit validation.'
                  - 'Credit card account limit exceed.'
                  - 'Deposit amount validation.'
                  - 'Discretionary Expenses.'
                  - 'Non-discretionary expense validation.'
                  - 'High risk cash withdrawal classification.'
                  - 'High risk merchant classification.'
                  - 'Home loan balance validation.'
                  - 'Home loan repayment amount and frequency validation.'
                  - 'Income repayment amount and frequency validation.'
                  - 'Personal loan balance validation.'
                  - 'Personal loan repayment amount and frequency validation.'
                  - 'Rental income validation.'
                  - 'Transaction account limit exceed.'
                  - 'Undisclosed account identification.'
              Status:
                type: string
                description: 'Automated assessment outcome - PASSED, FAILED or REVIEWED.  '
                enum:
                  - PASSED
                  - FAILED
                  - REVIEWED
              ResultId:
                type: integer
                description: 'Unique identifier of the result object.      '
              EmailAddress:
                type: string
                description: Email address of the Applicant - only populated if assessment
                  is "applicant-based".
              Household:
                type: string
                description: Household - only populated if assessment is "household-based".
              AccountNumber:
                type: string
                description: Account Number of the result - only populated if assessment
                  is "account-based".
              ActualAmount:
                type: number
                description: Actual amount identified by XAI Validate automated assessment
                  - null if not relevant.
              ValidatedAmount:
                type: number
                description: Validated amount input by authorised user - null if not
                  relevant.
              DeclaredAmount:
                type: number
                description: Declared amount from your customer's application - null
                  if not relevant.
              ActualFrequency:
                type: string
                description: Actual frequency identified by XAI Validate automated
                  assessment - null if not relevant.
              ValidatedFrequency:
                type: string
                description: Validated frequency input by authorised user - null if
                  not relevant.
              DeclaredFrequency:
                type: string
                description: Declared frequency from your customer's application -
                  null if not relevant.
        ApplicationContactResults:
          type: array
          description: Financial Validate result objects for each applicant.
          items:
            type: object
            properties:
              EmailAddress:
                type: string
                description: Email address of the Applicant - only populated if assessment
                  is "applicant-based".
              IncomeSalaryResultSummary:
                type: array
                description: Summary object for Income - Salary. Will return all sources of Income - Salary, except those with a one-off frequency.
                items:
                  type: object
                  properties:
                    AssessmentStatus:
                      type: string
                      description: Overall status of the assessment - returns
                        FAILED if any individual results are FAILED.
                      enum:
                        - PASSED
                        - FAILED
                        - REVIEWED
                    DeclaredSalaryAmount:
                      type: number
                      description: Customer "declared" income salary amount (gross annual).
                    IncomeSource:
                      type: string
                      description: Source of the salary
                    AccountNumber:
                      type: string
                      description: Account number of the salary source.
                    NetAmountMonthly:
                      type: object
                      properties:
                        Value:
                          type: number
                        Status:
                          type: string
                          enum:
                            - PASSED
                            - FAILED
                            - REVIEWED
                      description: Net amount of income salary - monthly. Returns
                        0 if no "actual" found, else "actual". If a user-entered
                        "validated" amount available, this will be returned.
                    NetAmountAnnual:
                      type: object
                      properties:
                        Value:
                          type: number
                        Status:
                          type: string
                          enum:
                            - PASSED
                            - FAILED
                            - REVIEWED
                      description: Net amount of income salary - annual. Returns
                        0 if no "actual" found, else "actual". If a user-entered
                        "validated" amount available, this will be returned.
                    GrossAmountAnnual:
                      type: object
                      properties:
                        Value:
                          type: number
                        Status:
                          type: string
                          enum:
                            - PASSED
                            - FAILED
                            - REVIEWED
                      description: Gross amount of income salary - annual. Returns
                        0 if no "actual" found, else "actual". If a user-entered
                        "validated" amount available, this will be returned.
                    GrossAmountMonthly:
                      type: object
                      properties:
                        Value:
                          type: number
                        Status:
                          type: string
                          enum:
                            - PASSED
                            - FAILED
                            - REVIEWED
                      description: Gross amount of income salary - monthly. Returns
                        0 if no "actual" found, else "actual". If a user-entered
                        "validated" amount available, this will be returned.
                    Frequency:
                      type: object
                      properties:
                        Value:
                          type: string
                          enum:
                            - MONTH
                            - FORT
                            - WEEK
                            - IRREGULAR
                        Status:
                          type: string
                          enum:
                            - PASSED
                            - FAILED
                            - REVIEWED
                      description: Detected payment frequency.
                    TransactionCount:
                      type: object
                      properties:
                        Value:
                          type: number
                        Status:
                          type: string
                      description: Count of "actual" income transactions identified.
                    AgeInDays:
                      type: object
                      properties:
                        Value:
                          type: number
                        Status:
                          type: string
                      description: Age in days of salary identified.
                    ProcessingGroup:
                      type: string
                      description: The group of validation tasks to which the result object belongs.
                      example: INCOME
                      enum:
                        - INCOME
                        - EXPENSES
                        - ASSETS
                        - LIABILITIES
                    ProcessingStatus:
                      type: string
                      description: The overall status of the tasks within the `ProcessingGroup`. This status corresponds to the Status job enumerations.
                      enum:
                        - READY
                        - PROCESSING
                        - COMPLETED
                        - FAILED
                        - DEAD
              IncomeRentalResultSummary:
                type: array
                description: Summary object for Income - Rental. Will return all
                  sources of Income - Rental.
                items:
                  type: object
                  properties:
                    AssessmentStatus:
                      type: string
                      description: Overall status of the assessment - returns
                        FAILED if any individual results are FAILED.
                      enum:
                        - PASSED
                        - FAILED
                        - REVIEWED
                    PropertyId:
                      type: string
                      description: Property Id
                    PropertyAddress:
                      type: string
                      description: Property Address for rental income - will be
                        null if no declared property could be matched, or no property
                        has been allocated to the rental income
                    DeclaredRentalAmount:
                      type: number
                      description: Customer "declared" income salary amount.
                    Ownership:
                      type: number
                      description: Percentage of ownership allocated to the Applicant
                        for the rental income.
                    AccountNumber:
                      type: string
                      description: Account number of the rental income source.
                    AmountMonthly:
                      type: object
                      properties:
                        Value:
                          type: number
                        Status:
                          type: string
                          enum:
                            - PASSED
                            - FAILED
                            - REVIEWED
                      description: Monthly amount of rental income identified.
                    Frequency:
                      type: object
                      properties:
                        Value:
                          type: string
                          enum:
                            - MONTH
                            - FORT
                            - WEEK
                            - IRREGULAR
                        Status:
                          type: string
                          enum:
                            - PASSED
                            - FAILED
                            - REVIEWED
                      description: Frequency of the rental income identified -
                        MONTH, FORT, WEEK, IRREGULAR.
                    TransactionCount:
                      type: object
                      properties:
                        Value:
                          type: number
                        Status:
                          type: string
                          enum:
                            - PASSED
                            - FAILED
                            - REVIEWED
                      description: Count of "actual" other income transactions
                        identified.
                    ProcessingGroup:
                      type: string
                      description: The group of validation tasks to which the result object belongs.
                      example: INCOME
                      enum:
                        - INCOME
                        - EXPENSES
                        - ASSETS
                        - LIABILITIES
                    ProcessingStatus:
                      type: string
                      description: The overall status of the tasks within the `ProcessingGroup`. This status corresponds to the Status job enumerations.
                      enum:
                        - READY
                        - PROCESSING
                        - COMPLETED
                        - FAILED
                        - DEAD
              IncomeOtherResultSummary:
                type: array
                description: Summary object for Income - Other. Will return all sources of Income - Other, except those with a one-off frequency.
                items:
                  type: object
                  properties:
                    IncomeSource:
                      type: string
                      description: Source of the other income.
                    AccountNumber:
                      type: string
                      description: Account number of the other income source.
                    NetAmountMonthly:
                      type: object
                      properties:
                        Value:
                          type: number
                      description: Net amount of other income - monthly. Returns
                        0 if no "actual" found, else "actual". If a user-entered
                        "validated" amount available, this will be returned.
                    NetAmountAnnual:
                      type: object
                      properties:
                        Value:
                          type: number
                      description: Net amount of other income - annual. Returns
                        0 if no "actual" found, else "actual". If a user-entered
                        "validated" amount available, this will be returned.
                    Frequency:
                      type: object
                      properties:
                        Value:
                          type: string
                          enum:
                            - MONTH
                            - FORT
                            - WEEK
                            - IRREGULAR
                      description: Detected payment frequency.
                    TransactionCount:
                      type: object
                      properties:
                        Value:
                          type: number
                      description: Count of "actual" other income transactions
                        identified.
                    AgeInDays:
                      type: object
                      properties:
                        Value:
                          type: number
                      description: Age in days of other income identified.
                    ProcessingGroup:
                      type: string
                      description: The group of validation tasks to which the result object belongs.
                      example: INCOME
                      enum:
                        - INCOME
                        - EXPENSES
                        - ASSETS
                        - LIABILITIES
                    ProcessingStatus:
                      type: string
                      description: The overall status of the tasks within the `ProcessingGroup`. This status corresponds to the Status job enumerations.
                      enum:
                        - READY
                        - PROCESSING
                        - COMPLETED
                        - FAILED
                        - DEAD
                    IncomeType:
                      type: string
                      description: The income type of the income identified
                      enum:
                        - BN
                        - CAR
                        - CS
                        - DEP
                        - DIV
                        - GIF 
                        - GOV
                        - INT
                        - LFY
                        - OVR
                        - ROY
                        - SUPER
                        - TAX
              HomeLoanResultSummary:
                type: array
                description: Summary object for Home Loans. Will return all home
                  loans - declared with matches, declared without matches, actuals
                  without matches.
                items:
                  type: object
                  properties:
                    AssessmentStatus:
                      type: string
                      description: Overall status of the assessment - returns
                        FAILED if any individual results are FAILED.
                      enum:
                        - PASSED
                        - FAILED
                        - REVIEWED
                    PropertyId:
                      type: string
                      description: Property Id
                    PropertyAddress:
                      type: string
                      description: Property Address for rental income - will be
                        null if no declared property could be matched.
                    AccountNumber:
                      type: string
                      description: Account number of the home loan actuals.
                    DeclaredBalance:
                      type: string
                      description: 'Customer "declared" home loan balance.    '
                    DeclaredRepayment:
                      type: string
                      description: 'Customer "declared" home loan repayment amount. '
                    Balance:
                      type: object
                      properties:
                        Value:
                          type: number
                        Status:
                          type: string
                          enum:
                            - PASSED
                            - FAILED
                            - REVIEWED
                      description: Home loan account outstanding balance.
                    RepaymentAmount:
                      type: object
                      properties:
                        Value:
                          type: number
                        Status:
                          type: string
                          enum:
                            - PASSED
                            - FAILED
                            - REVIEWED
                      description: Home loan repayment amount.
                    RepaymentFrequency:
                      type: object
                      properties:
                        Value:
                          type: string
                          enum:
                            - MONTH
                            - FORT
                            - WEEK
                            - IRREGULAR
                        Status:
                          type: string
                          enum:
                            - PASSED
                            - FAILED
                            - REVIEWED
                      description: Home loan repayment frequency.
                    TransactionCount:
                      type: object
                      properties:
                        Value:
                          type: number
                        Status:
                          type: string
                          enum:
                            - PASSED
                            - FAILED
                            - REVIEWED
                      description: Count of "actual" home loan repayments identified.
                    AgeInDays:
                      type: object
                      properties:
                        Value:
                          type: number
                        Status:
                          type: string
                      description: Age in days of the liability - using oldest
                        transaction.
                    FlagStatus:
                      type: object
                      properties:
                        HighRiskCount:
                          type: number
                        AdverseCount:
                          type: number
                        Arrears:
                          type: string
                          description: if `Reviewed` then any arrears behaviour has been checked by a user.
                      description: Behavioural flags.
                    ProcessingGroup:
                      type: string
                      description: The group of validation tasks to which the result object belongs.
                      example: LIABILITIES
                      enum:
                        - INCOME
                        - EXPENSES
                        - ASSETS
                        - LIABILITIES
                    ProcessingStatus:
                      type: string
                      description: The overall status of the tasks within the `ProcessingGroup`. This status corresponds to the Status job enumerations.
                      enum:
                        - READY
                        - PROCESSING
                        - COMPLETED
                        - FAILED
                        - DEAD
              CreditCardResultSummary:
                type: array
                description: Summary object for Credit Cards. Will return aggregated
                  position of all credit cards.
                items:
                  type: object
                  properties:
                    AssessmentStatus:
                      type: string
                      description: Overall status of the assessment - returns
                        FAILED if any individual results are FAILED.
                      enum:
                        - PASSED
                        - FAILED
                        - REVIEWED
                    DeclaredBalance:
                      type: string
                      description: 'Customer "declared" credit card balance.    '
                    DeclaredLimit:
                      type: string
                      description: 'Customer "declared" credit card limit. '
                    CreditCardBalance:
                      type: object
                      properties:
                        Value:
                          type: number
                        Status:
                          type: string
                          enum:
                            - PASSED
                            - FAILED
                            - REVIEWED
                      description: Credit card balance.
                    CreditCardLimit:
                      type: object
                      properties:
                        Value:
                          type: number
                        Status:
                          type: string
                          enum:
                            - PASSED
                            - FAILED
                            - REVIEWED
                      description: Credit card limit.
                    AgeInDays:
                      type: object
                      description: 'Where there are multiple credit cards, this value will be the age of the youngest credit card'
                      properties:
                        Value:
                          type: number
                        Status:
                          type: string
                          enum:
                            - PASSED
                            - FAILED
                            - REVIEWED
                    FlagStatus:
                      type: object
                      properties:
                        HighRiskCount:
                          type: number
                        AdverseCount:
                          type: number
                        Arrears:
                          type: string
                      description: Behavioural flags.
                    ProcessingGroup:
                      type: string
                      description: The group of validation tasks to which the result object belongs.
                      example: LIABILITIES
                      enum:
                        - INCOME
                        - EXPENSES
                        - ASSETS
                        - LIABILITIES
                    ProcessingStatus:
                      type: string
                      description: The overall status of the tasks within the `ProcessingGroup`. This status corresponds to the Status job enumerations.
                      enum:
                        - READY
                        - PROCESSING
                        - COMPLETED
                        - FAILED
                        - DEAD
              PersonalLoanResultSummary:
                  type: array
                  description: Summary object for Personal Loans.
                  items:
                    type: object
                    properties:
                      AssessmentStatus:
                        type: string
                        description: Overall status of the assessment - returns
                          FAILED if any individual results are FAILED.
                        enum:
                          - PASSED
                          - FAILED
                          - REVIEWED
                      DeclaredBalance:
                        type: string
                        description: 'Customer "declared" personal loan balance.    '
                      DeclaredRepayment:
                        type: string
                        description: 'Customer "declared" personal loan repayments. '
                      PersonalLoanBalance:
                        type: object
                        properties:
                          Value:
                            type: number
                          Status:
                            type: string
                            enum:
                              - PASSED
                              - FAILED
                              - REVIEWED
                        description: Personal loan balance.
                      PersonalLoanRepayment:
                        type: object
                        properties:
                          Value:
                            type: number
                          Status:
                            type: string
                            enum:
                              - PASSED
                              - FAILED
                              - REVIEWED
                        description: Personal loan limit.
                      AgeInDays:
                        type: object
                        properties:
                          Value:
                            type: number
                          Status:
                            type: string
                            enum:
                              - PASSED
                              - FAILED
                              - REVIEWED
                        description: Age in days of the liability - using oldest
                          transaction.
                      FlagStatus:
                        type: object
                        properties:
                          HighRiskCount:
                            type: number
                          AdverseCount:
                            type: number
                          Arrears:
                            type: string
                        description: Behavioural flags.
                      ProcessingGroup:
                        type: string
                        description: The group of validation tasks to which the result object belongs.
                        example: LIABILITIES
                        enum:
                          - INCOME
                          - EXPENSES
                          - ASSETS
                          - LIABILITIES
                      ProcessingStatus:
                        type: string
                        description: The overall status of the tasks within the `ProcessingGroup`. This status corresponds to the Status job enumerations.
                        enum:
                          - READY
                          - PROCESSING
                          - COMPLETED
                          - FAILED
                          - DEAD
        HouseholdResults:
          type: array
          description: Financial Validate result objects for each household.
          items:
            type: object
            properties:
              Household:
                type: object
                properties:
                  ExpenseSummary:
                    type: array
                    description: Summary object for Personal Loans.
                    items:
                      type: object
                      properties:
                        AssessmentStatus:
                          type: string
                          description: Overall status of the assessment - returns
                            FAILED if any individual results are FAILED.
                          enum:
                            - PASSED
                            - FAILED
                            - REVIEWED
                        DeclaredMonthlyExpenses:
                          type: string
                          description: Customer "declared" monthly expenses.
                        NonDiscretionaryAverage:
                          type: number
                          description: Identified Non-discretionary expenses - average
                            monthly expense value
                        NonDiscretionaryTotal:
                          type: number
                          description: Identified Non-discretionary expenses - total
                        NonDiscretionaryCount:
                          type: integer
                          description: Identified Non-discretionary expenses - count
                        NonDiscretionaryPercent:
                          type: number
                          description: Identified Non-discretionary expenses - share
                            of total expense value
                        DiscretionaryAverage:
                          type: number
                          description: Identified discretionary expenses - average
                            monthly expense value
                        DiscretionaryTotal:
                          type: number
                          description: Identified discretionary expenses - total
                        DiscretionaryCount:
                          type: integer
                          description: Identified discretionary expenses - count
                        DiscretionaryPercent:
                          type: number
                          description: Identified discretionary expenses - share of
                            total expense value
                        RemovedAverage:
                          type: number
                          description: Removed expenses - average monthly expense
                            value
                        RemovedTotal:
                          type: number
                          description: Removed expenses - total
                        RemovedCount:
                          type: integer
                          description: Removed expenses - count
                        RemovedPercent:
                          type: number
                          description: Removed expenses - share of total expense value
                        DateFrom:
                          type: string
                          description: Date of oldest expense
                          format: date-time
                        DateTo:
                          type: string
                          description: Date of most recent expense
                          format: date-time
                        Months:
                          type: integer
                          description: Total months of expenses identified.
                        Days:
                          type: integer
                          description: 'Total days of expenses identified.   '
                        ExpensesTotal:
                          type: number
                          description: Sum of all expenses
                        ExpensesCount:
                          type: integer
                          description: Count of all expenses
                        ProcessingGroup:
                          type: string
                          description: The group of validation tasks to which the result object belongs.
                          example: EXPENSES
                          enum:
                            - INCOME
                            - EXPENSES
                            - ASSETS
                            - LIABILITIES
                        ProcessingStatus:
                          type: string
                          description: The overall status of the tasks within the `ProcessingGroup`. This status corresponds to the Status job enumerations.
                          enum:
                            - READY
                            - PROCESSING
                            - COMPLETED
                            - FAILED
                            - DEAD
                description: Household identifier - only populated if assessment is
                  "household-based".
        ApplicationResults:
          type: array
          description: Financial Validate result objects for application-level automated
            assessments.
          items:
            type: object
            properties:
              DepositSummary:
                type: array
                description: Summary object for Deposits.
                items:
                  type: object
                  properties:
                    AssessmentStatus:
                      type: string
                      description: 'Overall status of the assessment - returns FAILED
                        if any individual results are FAILED.           '
                      enum:
                        - PASSED
                        - FAILED
                        - REVIEWED
                    DepositAmount:
                      type: object
                      properties:
                        Value:
                          type: number
                        Status:
                          type: string
                      description: Desposit amount.
                    DeclaredDepositAmount:
                      type: number
                      description: "Customer \"declared\" Desposit amount.\n\n    "
                    ProcessingGroup:
                      type: string
                      description: The group of validation tasks to which the result object belongs.
                      example: ASSETS
                      enum:
                        - INCOME
                        - EXPENSES
                        - ASSETS
                        - LIABILITIES
                    ProcessingStatus:
                      type: string
                      description: The overall status of the tasks within the `ProcessingGroup`. This status corresponds to the Status job enumerations.
                      enum:
                        - READY
                        - PROCESSING
                        - COMPLETED
                        - FAILED
                        - DEAD
        RequestId:
          type: string
          example: RojLCjD-ywPPMNg=
          description: unique request identifier
    ResponseGetExpenseSummary:
      required:
      - Application
      - Results
      type: object
      properties:
        Application:
          type: object
          properties:
            ApplicationReferenceNumber:
              type: string
              description: Unique XAI Validate application reference number (Arn).
                Results for one application can be retrieved at a time.
            ExternalApplicationReferenceNumber:
              type: string
              description: Unique application identifier from your own system.
          description: Request object containing Application Create payload.
        Results:
          type: array
          description: Financial Validate result objects for each household.
          items:
            type: object
            properties:
              HouseholdAddress:
                description: The address of the household provided during the `application/manage` call
                type: string
                example: 21 Jump Street, Narre Warren, 3999 VIC
              ExpenseSummary:
                type: array
                description: Summary object Household expenses by category
                required:
                  - ExpenseCategory
                  - NonDiscretionaryAverage
                  - NonDiscretionaryTotal
                  - NonDiscretionaryCount
                  - NonDiscretionaryPercent
                  - DiscretionaryAverage
                  - DiscretionaryTotal
                  - DiscretionaryCount
                  - DiscretionaryPercent
                  - RemovedAverage
                  - RemovedTotal,
                  - RemovedCount
                  - RemovedPercent
                  - DateFrom
                  - DateTo
                  - Months
                  - Days
                  - ExpensesTotal
                  - ExpensesCount
                items:
                  type: object
                  properties:
                    ExpenseCategory:
                      type: string
                      description: The name of the expense assessment category you've configured. If no custom categories are configured, the default XAI Validate assessment categories are returned.
                      enum:
                        - Alcoholic beverages
                        - Higher education, vocational training and professional association
                        - Childcare
                        - Recreation, entertainment and travel
                        - Food, groceries and household cleaning products
                        - Medical and health care
                        - Fees and taxes on the primary residence
                        - General insurance
                        - Fees and taxes on the other residences
                        - Other goods and services
                        - Clothing and personal care
                        - Household furnishings, equipment, and home repairs and improvements
                        - Rent or board
                        - Communications and subscriptions
                        - Transportation costs including public transport and taxis
                        - Uncategorised
                        - Credit card repayments
                        - Home loan repayments
                        - Other loan repayments
                        - Other income
                        - Salary income
                        - Savings transfer
                        - Transfers
                        - Cash withdrawals
                        - Internal transfer
                        - Interest and fee payments
                        - Recreational gambling
                        - Health insurance
                        - Pet care and insurance
                        - Restaurants, cafes and takeaway
                        - Public and private schooling and tuition
                        - Utilities and insurance for other residences
                        - Utilities for the primary residence
                        - Government benefits
                        - Superannuation
                        - Education
                    NonDiscretionaryAverage:
                      type: number
                      description: Identified Non-discretionary expenses - average
                        monthly expense value
                      example: 156.44
                    NonDiscretionaryTotal:
                      type: number
                      description: Identified Non-discretionary expenses - total
                      example: 4522.44
                    NonDiscretionaryCount:
                      type: integer
                      description: Identified Non-discretionary expenses - count
                      example: 25
                    NonDiscretionaryPercent:
                      type: number
                      description: Identified Non-discretionary expenses - share
                        of total expense value
                      example: 0.546
                    DiscretionaryAverage:
                      type: number
                      description: Identified discretionary expenses - average
                        monthly expense value
                      example: 76.44
                    DiscretionaryTotal:
                      type: number
                      description: Identified discretionary expenses - total
                      example: 422.44
                    DiscretionaryCount:
                      type: integer
                      description: Identified discretionary expenses - count
                      example: 15
                    DiscretionaryPercent:
                      type: number
                      description: Identified discretionary expenses - share of
                        total expense value
                      example: 0.0145
                    RemovedAverage:
                      type: number
                      description: Removed expenses - average monthly expense
                        value
                      example: 0
                    RemovedTotal:
                      type: number
                      description: Removed expenses - total
                      example: 0
                    RemovedCount:
                      type: integer
                      description: Removed expenses - count
                      example: 0
                    RemovedPercent:
                      type: number
                      description: Removed expenses - share of total expense value
                    DateFrom:
                      type: string
                      description: Date of oldest expense
                      format: date-time
                    DateTo:
                      type: string
                      description: Date of most recent expense
                      format: date-time
                    Months:
                      type: integer
                      description: Total months of expenses identified.
                      example: 5
                    Days:
                      type: integer
                      description: 'Total days of expenses identified.   '
                      example: 154
                    ExpensesTotal:
                      type: number
                      description: Sum of all expenses
                      example: 1255.544
                    ExpensesCount:
                      type: integer
                      description: Count of all expenses
                      example: 45
        RequestId:
          type: string
          example: RojLCjD-ywPPMNg=
          description: unique request identifier
    RequestJobsFinancialValidation:
      required:
      - Application
      type: object
      properties:
        Application:
          type: object
          properties:
            ApplicationReferenceNumber:
              type: string
              description: Unique XAI Validate application reference number (Arn).
                Results for one application can be retrieved at a time.
            GroupId:
              type: string
              description: Unique GroupId for the financial validation job.
          description: Request object containing Application Create payload.
    ResponseJobsFinancialValidation:
      required:
      - ApplicationReferenceNumber
      - GroupId
      - RequestCreatedOn
      - RequestId
      - RequestLastUpdatedOn
      - RequestStatus
      type: object
      properties:
        ApplicationReferenceNumber:
          type: string
          description: Unique XAI Validate application reference number (Arn). Results
            for one application can be retrieved at a time.
        GroupId:
          type: string
          description: Unique GroupId for the financial validation job.
          example: AABB112233-3fa85f64-5717-4562-b3fc-2c963f66afa6
        RequestCreatedOn:
          type: string
          format: date-time
        RequestLastUpdatedOn:
          type: string
          format: date-time
        RequestId:
          type: integer
          description: Unique `RequestId` for the asyncrhonous Request
          example: RojLCjD-ywPPMNg=
        RequestStatus:
          type: string
          description: Name of the Request being processed e.g. `CreateApplication`
          enum:
          - READY
          - PROCESSING
          - COMPLETED
          - SUPERSEDED
          - FAILED
          - DEAD
    RequestWebhookStatusNotification:
      required: 
      - CallbackUrl
      type: object
      properties:
        CallbackUrl:
          type: string
          description: The Callback URL you want to configure for status notifications.
          format: uri
    ResponseWebhookStatusNotification:
      required:
      - RequestId
      - CallbackUrl
      type: object
      properties:
        RequestId:
          type: string
          description: Unique `RequestId` for the request
          example: RojLCjD-ywPPMNg=
        CallbackUrl:
          type: string
          description: Confirmation of the configured URL for your notification subscriptions.
          format: uri
    WebhookStatusNotification:
      required:
      - ApplicationReferenceNumber
      - ProcessingStatus
      - RequestCreatedOn
      - RequestLastUpdatedOn
      - GroupId
      - AssessmentType
      type: object
      properties:
        ApplicationReferenceNumber:
          type: string
          description: Unique XAI Validate application reference number (Arn). Results
            for one application can be retrieved at a time.
          example: AABB12345
        ProcessingStatus:
          type: string
          description: The processing status of the particualar assessment task.
          enum:
          - COMPLETED
          - DEAD
        RequestCreatedOn:
          type: string
          format: date-time
        RequestLastUpdatedOn:
          type: string
          format: date-time
        GroupId:
          type: string
          description: Unique GroupId for the financial validation job.
          example: AABB12345-3fa85f64-5717-4562-b3fc-2c963f66afa6
        AssessmentType:
          type: string
          description: The name of the financial validation task being executed.
          enum:
          - Commenced
          - Data
          - Categorised
          - Assets
          - Liabilities
          - Income
          - Expenses
          - Serviceability
          - Finalised
    RequestApplicationServiceability:
      required:
      - ApplicationReferenceNumber
      - NewFacilities
      - ConfigurationSet
      type: object
      properties:
        ApplicationReferenceNumber:
          type: string
          description: The unique application reference number. 
          example: AAAA111222333
        NewFacilities:
          $ref: '#/components/schemas/RequestNewFacilities'
        ConfigurationSet:
          required:
          - Lender
          - Version
          type: object
          description: These are the settings we will use when calculating the serviceability of an application. These include the merchant, lender, configuration, and policy versions.
          properties:
            Merchant:
              type: string
              description: The client code you have configured a lending policy against.
              example: 'MERCHANTCODE'
            Lender:
              type: string
              description: The lender or product code you have configured a lending policy against.
              example: 'LENDERCODE'
            Version:
              required:
              - Id
              type: object
              description: This is where you will specify the serviceability configuration of the credit policy you wish to use. A credit policy can have pre-configured variations, i.e., one where the new loan interest rate is 3% and another at 1%.
              properties:
                Id:
                  type: string
                  description: The Id code you have configured the specific lending policy against. This field is required to utilise an alternate configuration; otherwise, this field can be left as null or enter the value “1”.
                  example: '1'
                Label:
                  type: string
                  description: The label you have configured the specific lending policy against. For your default policy, use the term “DEFAULT”; if you have an alternative policy, this would be your chosen label.
                  example: 'DEFAULT'
        ValidationTypes:
            type: object
            description: This object will determine what kind of data we use when calculating serviceability on an application. If none are provided, the default will be to use “validated” financials over detected “actuals” over “declared”.
            required: 
              - Incomes
              - Expenses
              - Liabilities
            properties:
              Incomes:
                type: string
                description: The financial validation type to be used for income types.
                enum:
                - STATED
                - ACTUAL
                - VALIDATED
              Expenses:
                type: string
                description: The financial validation type to be used for expenses.
                enum:
                - STATED
                - ACTUAL
                - VALIDATED
              Liabilities:
                type: string
                description: The financial validation type to be used for liabilities.
                enum:
                - STATED
                - ACTUAL
                - VALIDATED
        PolicyVersion:
            type: string
            description: The policy version you specify when creating serviceability configuration. The value is a string representation of a decimal.
            example: "1.11"
    ResponseApplicationServiceability:
      required:
      - RequestId
      - ApplicationReferenceNumber
      - ServiceabilityResults
      - PolicyVersion
      - ConfigurationSet
      type: object
      properties:
        RequestId:
          type: string
          description: Unique identifier for your request.
          example: RojLCjD-ywPPMNg=
        ApplicationReferenceNumber:
          type: string
          description: The unique application reference number. 
          example: AAAA111222333
        ConfigurationSet:
          required:
          - Lender
          - Version
          type: object
          description: These are the settings we will use when calculating the serviceability of an application. These include the merchant, lender, configuration, and policy versions.
          properties:
            Merchant:
              type: string
              description: The client code you have configured a lending policy against.
              example: 'MERCHANTCODE'
            Lender:
              type: string
              description: The lender or product code you have configured a lending policy against.
              example: 'LENDERCODE'
            Version:
              required:
              - Id
              type: object
              description: This is where you will specify the serviceability configuration of the credit policy you wish to use. A credit policy can have pre-configured variations, i.e., one where the new loan interest rate is 3% and another at 1%.
              properties:
                Id:
                  type: string
                  description: The Id code you have configured the specific lending policy against. This field is required to utilise an alternate configuration; otherwise, this field can be left as null or enter the value “1”.
                  example: '1'
                Label:
                  type: string
                  description: The label you have configured the specific lending policy against. For your default policy, use the term “DEFAULT”; if you have an alternative policy, this would be your chosen label.
                  example: 'DEFAULT'
        PolicyVersion:
          type: string
          description: The policy version you specify when creating serviceability configuration. The value is a string representation of a decimal.
          example: "1.11"    
        ServiceabilityResults:
          type: array
          description: List containing serviceability results per facility in your request.
          items:
            type: object
            required: 
              - NewFacility
              - ApplicationServiceability
            properties:
              NewFacility:
                $ref: '#/components/schemas/ResponseNewFacility'
              ApplicationServiceability:
                type: object
                description: Object containing the Application and Applicant Serviceability results.
                required:
                - NetMonthlySurplus
                - LoanToIncomeRatio
                - MonthlyRepaymentIncomeRatio
                - DebtToIncomeRatio
                - TotalDebtRepayment
                - AllHouseholdsHemExpenses
                - AllHouseholdsMonthlyExpenses
                - AllHouseholdsMonthlyRentBoard
                - AllHouseholdsMonthlySavingCapacityBuffer
                - TotalExpensesDebtRepayments
                - NetSurplusExcludingAddbacks
                - NetSurplusIncludingAddbacks
                - NetSurplusRatioExcludingAddbacks
                - NetSurplusRatioIncludingAddbacks
                - MaxBorrowingAmount
                - HecsTotalMonthlyRepayment
                - ApplicantServiceability
                properties:
                  NetMonthlySurplus:
                    type: number
                    format: double
                    description: Represents the net monthly surplus at application level after serviceability calculations. 
                    example: 1234.56
                  LoanToIncomeRatio:
                    type: number
                    format: double
                    description: Represents the loan amount to income ratio at application level 
                    example: 1.4589
                  MonthlyRepaymentIncomeRatio:
                    type: number
                    format: double
                    description: Represents the monthly repayments to income ratio at application level.
                    example: 1.5577
                  DebtToIncomeRatio:
                    type: number
                    format: double
                    description: Represents the debt to income ratio at application level 
                    example: 4.5667
                  TotalPersonalLoanMonthlyRepayment:
                    description: Represents the sum of all personal loans repayments at application level.
                    type: number
                    format: double
                    example: 750.0000
                  TotalCreditCardMonthlyRepayment:
                    description: Represents the sum of all credit cards monthly repayments at application level.
                    type: number
                    format: double
                    example: 500.1112 
                  TotalExistingMonthlyBufferedRepayment:
                    description: The sum of all debt repayments for facilities currently owned by all applicants.
                    type: number
                    format: double
                    example: 3090.1134
                  TotalNewMonthlyBufferedRepayment:
                    description: The sum of all debt repayments for the new facility.
                    type: number
                    format: double
                    example: 4020.1123
                  TotalDebtRepayment:
                    type: number
                    format: double
                    description: Represents the total debt repayments at application level. 
                    example: 1234.56
                  AllHouseholdsHemExpenses:
                    type: number
                    format: double
                    description: Represents the sum of all households HEM expenses at application level.
                    example: 2234.56
                  AllHouseholdsMonthlyExpenses:
                    type: number
                    format: double
                    description: Represents the sum of all monthly household expenses at application level.
                    example: 5234.56
                  AllHouseholdsMonthlyRentBoard:
                    type: number
                    format: double
                    description: Represents the sum of all households monthly rent/board expenses at application level.
                    example: 1234.56
                  AllHouseholdsMonthlySavingCapacityBuffer:
                    type: number
                    format: double
                    description: Represents the sum of all households monthly saving capacity buffers at application level.
                    example: 234.56
                  TotalExpensesDebtRepayments:
                    type: number
                    format: double
                    description: Represents the sum of all expenses and debt repayments at application level.
                    example: 134.56
                  NetSurplusExcludingAddbacks:
                    type: number
                    format: double
                    description: Represents the net surplus amount excluding addbacks at application level.
                    example: 134.56
                  NetSurplusIncludingAddbacks:
                    type: number
                    format: double
                    description: Represents the net surplus which includes addbacks at application level.
                    example: 134.56
                  NetSurplusRatioExcludingAddbacks:
                    type: number
                    format: double
                    description: Represents the net surplus ratio excluding addbacks at application level.
                    example: 1.5622
                  NetSurplusRatioIncludingAddbacks:
                    type: number
                    format: double
                    description: Represents the net surplus ratio including addbacks at application level.
                    example: 1.6611
                  MaxBorrowingAmount:
                    type: number
                    format: double
                    description: Represents the maximum borrowing amount at application level.
                    example: 100000.1155
                  HecsTotalMonthlyRepayment:
                    description: The total HECS monthly repayment at the application level.
                    type: number
                    format: double
                    example: 350.75                     
                  ApplicantServiceability:
                    $ref: '#/components/schemas/ResponseApplicantServiceability'      
    ResponseApplicantServiceability:
      type: array
      description: A list of applicant-level serviceability results.
      items:
        type: object
        required:
        - EmailAddress
        - TaxableGrossIncome
        - AttributableGrossIncome
        - NetIncomeExcludingAddbacks
        - NetIncomeExcludingAddbacksMonthly
        - NetIncomeIncludingAddbacks
        - NetIncomeIncludingAddbacksMonthly
        - TotalAttributableAnnualRent
        - TotalExistingBufferedRepayment
        - CreditCardMonthlyRepayment
        - PersonalLoanMonthlyRepayment
        - HecsMonthlyRepayment
        properties:
          EmailAddress:
            description: The email address indicating the applicant-level serviceability results.
            type: string
            format: email
          TaxableGrossIncome:
            description: Represents the applicant specific taxable gross annual income.
            type: number
            format: double
            example: 110555.66
          AttributableGrossIncome:
            description: Represents the applicant specific gross annual income.
            type: number
            format: double
            example: 119555.66
          NetIncomeExcludingAddbacks:
            description: Represents the applicant specific net annual income excluding addbacks.
            type: number
            format: double
            example: 101444.77
          NetIncomeExcludingAddbacksMonthly:
            description: Represents the applicant specific net monthly income excluding addbacks.
            type: number
            format: double
            example: 3044.77 
          NetIncomeIncludingAddbacks:
            description: Represents the applicant specific net annual income including addbacks.
            type: number
            format: double
            example: 101444.77
          NetIncomeIncludingAddbacksMonthly:
            description: Represents the applicant specific net monthly income including addbacks.
            type: number
            format: double
            example: 3044.77 
          TotalAttributableAnnualRent:
            description: Represents the applicant specific total attributable annual rent.
            type: number
            format: double
            example: 1050.11 
          TotalExistingBufferedRepayment:
            description: Represents the total existing facilities buffered repayment.
            type: number
            format: double
            example: 3090.11 
          TotalNewMonthlyBufferedRepayment:
            description: The debt repayments for the new facility.
            type: number
            format: double
            example: 4020.1111
          CreditCardMonthlyRepayment:
            description: Represents the applicant specific total credit card monthly repayment.
            type: number
            format: double
            example: 500.11 
          PersonalLoanMonthlyRepayment:
            description: Represents the applicant specific total personal loan monthly repayment.
            type: number
            format: double
            example: 750.00
          HecsMonthlyRepayment:
            description: HECS debt monthly repayment at the applicant level.
            type: number
            format: double
            example: 350.75      
    RequestNewFacilities:
      type: array
      description: An optional list of new debt facilities for which the customer is applying. We will use the debt facilities provided in the `application/manage` call, so this object can remain empty.
      items:
        type: object
        properties:
          PropertyAddress:
            type: string
            description: the address of the property.
            example: "21 Jump Street, Narre Warren, VIC 3999"
          PropertyPostcode:
            type: string
            description: the postcode of the property.
            example: 3999
          BorrowingAmount:
            type: number
            description: The amount your customer wants to borrow.
            example: 450000.00
          MonthlyRepayment:
            type: number
            description: The monthly amount repayment for the loan - deprecated. If MonthlyRepayments is provided, this value is ignored.
            example: 2500.25            
          MonthlyRepayments:
            type: number
            description: The monthly amount repayment for the loan.
            example: 2500.25
          RepaymentType:
            type: string
            description: The repayment type of the loan - principal & interest (`PI`) or interest only (`IO`).
            enum:
              - PI
              - IO
              - LOC
          LoanPurpose:
            type: string
            description: The loan type, purchase PUR or refinance REF. The address must match a home loan provided in the ManageApplication call if refinancing. If not provided, the default will be 'REF'.
            enum:
            - PUR
            - REF
          LoanTerm:
            type: integer
            description: The number of years for the loan
            example: 30
          RateTerm:
            type: integer
            description: The number of years the initial interest rate applies.
            example: 0
          PropertyUsage:
            type: string
            description: Describes how the applicant will use the property, as `Livein` or `Investment`.
            enum:
              - Livein
              - Investment
          InterestRate:
            type: number
            description: The decimal amount of the annual interest rate.
            example: 0.0359
          RentalIncome:
            type: number
            description: The monthly rental income associated with the loan. If this is not provided on a refinance, we will use the property's rental income declared in the ManageApplication call.
            example: 2500.25
          RentalExpense:
            type: number
            description: The monthly rental expense associated with the loan. If this is not provided on a refinance, we will use the property's rental expense declared in the ManageApplication call.
            example: 1500.50
          OwnershipPercentage:
            type: number
            description: The decimal amount of the ownership percentage.
            example: 0.5
    RequestProvideAccounts:
      required:
      - ApplicationReferenceNumber
      - ApplicationContacts
      type: object
      properties:
        ApplicationReferenceNumber:
          type: string
          example: AABB1234567
          description: Unique XAI Validate Application Reference Number (Arn).
            This will be returned from the [`/application/create`](#/application/createApplication) endpoint.
        ApplicationContacts:
          type: array
          description: Object containing applicant information.
          items:
            type: object
            required:
            - EmailAddress
            properties:
              EmailAddress:
                type: string
                description: Applicant email address - this is required.
    ResponseProvideAccounts:  
      required:
      - ApplicationContacts
      - GroupId
      type: object
      properties:
        ApplicationContacts:
          type: array
          description: Object containing applicant information inc. the unique one-time upload URL.
          items:
            type: object
            required:
            - EmailAddress
            - UploadUrl
            properties:
              EmailAddress:
                type: string
                description: Applicant email address or identifier.
              UploadUrl:
                type: string
                description: Unique one-time upload URL for the applicant.
                example: "https://nnnnnnnn.amazonaws.com/ClientCode/ApplicationReferenceNumber/713dfa9a-54f4-4d6c-b403-98a6eec737ce?X-Amz-Expires=3600&x-amz-security-token=nnnnnn&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=nnnnnn&X-Amz-Date=20200816T222809Z&X-Amz-SignedHeaders=host;x-amz-security-token&X-Amz-Signature=nnnnn"

        RequestId:
          type: string
          description: Unique identifier for the request
          example: RojLCjD-ywPPMNg=
    RequestUploadAccountTransaction: 
      required:
        - Accounts
      type: object
      properties:
        Accounts:
          type: array
          description: List containing your applicant's account data
          items:
            type: object
            required:
              - AccountNumber
              - AccountName
              - CurrentBalance
            properties:
              AccountId:
                type: string
                format: uuid
                description: a unique identifier you've allocated to the account
              FinancialInstitution:
                type: string
                example: "Commonwealth Bank of Australia"
                description: the financial institution name from an agreed enumeration
              AccountBsb:
                type: string
                example: 065-125
                description: the account BSB if available
              AccountNumber:
                type: string
                example: 112xxxx4658
                description: Account number from the source system. This can be obfuscated before providing. This will form part of the matching logic to identify joint account ownership.
              AccountType:
                type: string
                example: TRANSACTION
                description: Account type indicator. This will be used to drive configuration within your client profile. If this isn't provided the account type default will be `OTHER` 
                enum:
                - TRANSACTION
                - CREDITCARD
                - HOMELOAN
                - PERSONALLOAN
                - OTHER
              AccountName:
                type: string
                example: PARTY ACCOUNT
                description: The name of the account.
              CurrentBalance:
                type: number
                example: -5486.15
                description: The balance of the account at the request point of time. Can be positive, zero or negative
              AvailableBalance:
                type: number
                example: -5454.15
                description: Balance representing the amount of funds available for transfer. Assumed to be zero or positive. This should be the `CurrentBalance` – sum(pending transactions)
              CreditLimit:
                type: number
                example: 10000
                description: The maximum amount of credit available for the account.
              Transactions:
                type: array
                description: List containing your applicant's account's transactions
                items:
                  type: object
                  required:
                  - TransactionPostedOn
                  - TransactionDescription
                  - TransactionAmount
                  properties:
                    TransactionId:
                      type: string
                      format: uuid
                      description: Unique transaction identifier from your source system.
                    TransactionPostedOn:
                      type: string
                      format: date-time
                      description: This the date on which the transaction was posted to the account.
                    TransactionStatus:
                      type: string
                      example: POSTED
                      description: Indicator as to the status of the transaction posting on the account. Used to adjust the balances.
                      enum:
                      - POSTED
                      - PENDING
                    TransactionDescription:
                      type: string
                      example: Coffee from the corner Recxxx65125
                      description: The transaction description/narrative
                    TransactionAmount:
                      type: number
                      example: -5.56
                      description: The amount of the transaction including the sign. Expected to be positive,  negative or zero.
                    MerchantName:
                      type: string
                      example: Coffee Club
                      description: Name of the merchant for an outgoing payment to a merchant.
                    MerchantCategoryCode:
                      type: string
                      example: "7000"
                      description: The merchant category code (or MCC) for an outgoing payment to a merchant.
    ResponseUpload:
      type: object
      required:
        - RequestId
      properties:
        RequestId:
          type: string
          description: 'Unique identifier for the request.    '
          example: RojLCjD-ywPPMNg=
                
    RequestEnrichExpense:
      required:
        - Accounts
      type: object
      properties:
        Accounts:
          type: array
          description: List containing your applicant's account data
          items:
            type: object
            properties:
              AccountId:
                type: string
                format: uuid
                description: a unique identifier you've allocated to the account
              FinancialInstitution:
                type: string
                example: "Commonwealth Bank of Australia"
                description: the financial institution name from an agreed enumeration
              AccountBsb:
                type: string
                example: 065-125
                description: the account BSB if available
              AccountNumber:
                type: string
                example: 112xxxx4658
                description: Account number from the source system. This can be obfuscated before providing. This will form part of the matching logic to identify joint account ownership.
              AccountType:
                type: string
                example: TRANSACTION
                description: Account type indicator. This must be provided. If you don't know it then please provide `NOTMATCHED` 
                enum:
                - TRANSACTION
                - CREDITCARD
                - HOMELOAN
                - PERSONALLOAN
                - NOTMATCHED
              AccountName:
                type: string
                example: PARTY ACCOUNT
                description: The name of the account.
              CurrentBalance:
                type: number
                example: -5486.15
                description: The balance of the account at the request point of time. Can be positive, zero or negative
              AvailableBalance:
                type: number
                example: -5454.15
                description: Balance representing the amount of funds available for transfer. Assumed to be zero or positive. This should be the `CurrentBalance` – sum(pending transactions)
              CreditLimit:
                type: number
                example: 10000
                description: The maximum amount of credit available for the account.
              Transactions:
                type: array
                description: List containing your applicant's account's transactions
                items:
                  type: object
                  required:
                  - TransactionPostedOn
                  - TransactionDescription
                  - TransactionAmount
                  properties:
                    TransactionId:
                      type: string
                      format: uuid
                      description: Unique transaction identifier from your source system.
                    TransactionPostedOn:
                      type: string
                      format: date-time
                      description: This the date on which the transaction was posted to the account.
                    TransactionDescription:
                      type: string
                      example: Coffee from the corner Recxxx65125
                      description: The transaction description/narrative
                    TransactionAmount:
                      type: number
                      example: -5.56
                      description: The amount of the transaction including the sign. Expected to be positive,  negative or zero.
    ResponseEnrichExpense:
      required:
        - Accounts
      type: object
      properties:
        Accounts:
          type: array
          description: List containing your applicant's account data
          items:
            type: object
            required:
              - AccountType
            properties:
              AccountId:
                type: string
                format: uuid
                description: a unique identifier you've allocated to the account
              FinancialInstitution:
                type: string
                example: "Commonwealth Bank of Australia"
                description: the financial institution name from an agreed enumeration
              AccountBsb:
                type: string
                example: 065-125
                description: the account BSB if available
              AccountNumber:
                type: string
                example: 112xxxx4658
                description: Account number from the source system. This can be obfuscated before providing. This will form part of the matching logic to identify joint account ownership.
              AccountType:
                type: string
                example: TRANSACTION
                description: Account type indicator. This must be provided. If you don't know it then please provide `NOTMATCHED` 
                enum:
                - TRANSACTION
                - CREDITCARD
                - HOMELOAN
                - PERSONALLOAN
                - NOTMATCHED
              AccountName:
                type: string
                example: PARTY ACCOUNT
                description: The name of the account.
              CurrentBalance:
                type: number
                example: -5486.15
                description: The balance of the account at the request point of time. Can be positive, zero or negative
              AvailableBalance:
                type: number
                example: -5454.15
                description: Balance representing the amount of funds available for transfer. Assumed to be zero or positive. This should be the `CurrentBalance` – sum(pending transactions)
              CreditLimit:
                type: number
                example: 10000
                description: The maximum amount of credit available for the account.
              Transactions:
                type: array
                description: List containing your applicant's account's transactions
                items:
                  type: object
                  required:
                  - TransactionPostedOn
                  - TransactionDescription
                  - TransactionAmount
                  - ExpenseCategory
                  - ExpenseCategoryProbability
                  - ExpenseMerchant
                  - IsInternalTransfer
                  - IsAdverseTransaction
                  - IsHighRiskMerchant
                  - IsHighRiskCashWithdrawal
                  - IsDiscretionaryExpense
                  - DiscretionaryExpenseAmount
                  - DiscretionaryExpenseProbability
                  properties:
                    TransactionId:
                      type: string
                      format: uuid
                      description: Unique transaction identifier from your source system.
                    TransactionPostedOn:
                      type: string
                      format: date-time
                      description: This the date on which the transaction was posted to the account.
                    TransactionDescription:
                      type: string
                      example: Coffee from the corner Recxxx65125
                      description: The transaction description/narrative
                    TransactionAmount:
                      type: number
                      example: -5.56
                      description: The amount of the transaction including the sign. Expected to be positive,  negative or zero.
                    ExpenseCategory: 
                      type: string
                      example: Restaurants, cafes and takeaway
                      description: The name of the LIX Living Expense aligned expense category assigned to the transaction.
                      enum:
                        - Alcoholic beverages
                        - Higher education, vocational training and professional association
                        - Childcare
                        - Recreation, entertainment and travel
                        - Food, groceries and household cleaning products
                        - Medical and health care
                        - Fees and taxes on the primary residence
                        - General insurance
                        - Fees and taxes on the other residences
                        - Other goods and services
                        - Clothing and personal care
                        - Household furnishings, equipment, and home repairs and improvements
                        - Rent or board
                        - Communications and subscriptions
                        - Transportation costs including public transport and taxis
                        - Uncategorised
                        - Credit card repayments
                        - Home loan repayments
                        - Other loan repayments
                        - Other income
                        - Salary income
                        - Savings transfer
                        - Transfers
                        - Cash withdrawals
                        - Internal transfer
                        - Interest and fee payments
                        - Recreational gambling
                        - Health insurance
                        - Pet care and insurance
                        - Restaurants, cafes and takeaway
                        - Public and private schooling and tuition
                        - Utilities and insurance for other residences
                        - Utilities for the primary residence
                        - Government benefits
                        - Superannuation
                        - Education
                    ExpenseCategoryProbability:
                      type: number
                      example: 0.964485
                      description: The probability of the expense category prediction.
                    ExpenseMerchant:
                      type: string
                      example: Coffee Shop Pty Ltd
                      description: The merchant where the expense was made.
                    IsInternalTransfer:
                      type: boolean
                      description: Internal transfer indicator.
                    IsAdverseTransaction:
                      type: boolean
                      description: Adverse transaction indicator.
                    IsHighRiskMerchant:
                      type: boolean
                      description: High risk merchant transaction indicator.
                    IsHighRiskCashWithdrawal:
                      type: boolean
                      description: High risk cash withdrawal transaction indicator.
                    IsDiscretionaryExpense:
                      type: boolean
                      description: Discretionary expense transaction indicator.
                    DiscretionaryExpenseAmount:
                      type: number
                      example: -5.56
                      description: Discretionary expense predicted amount.
                    DiscretionaryExpenseProbability:
                      type: number
                      example: 0.85485233
                      description: Discretionary expense prediction probability.
     
    ResponseNewFacility:
      type: object
      description: The new debt facilities for which your customer is applying for serviceability results.
      required:
      - PropertyAddress
      - BorrowingAmount
      - MonthlyRepayment
      - RepaymentType
      - LoanTerm
      - RateTerm
      - PropertyUsage
      - InterestRate
      - OwnershipPercentage
      properties:
        PropertyAddress:
          type: string
          description: the address of the property.
          example: "21 Jump Street, Narre Warren, VIC 3999"
        BorrowingAmount:
          type: number
          description: The amount your customer wants to borrow.
          example: 450000.00
        MonthlyRepayment:
          type: number
          description: The monthly amount repayment for the loan - deprecated. If MonthlyRepayments is provided, this value is ignored.
          example: 2500.25
        MonthlyRepayments:
          type: number
          description: The monthly amount repayment for the loan.
          example: 2500.25
        RepaymentType:
          type: string
          description: The repayment type of the loan - principal & interest (`PI`) or interest only (`IO`).
          enum:
            - PI
            - IO
        LoanTerm:
          type: integer
          description: The number of years for the loan
          example: 30
        RateTerm:
          type: integer
          description: The number of years the initial interest rate applies.
          example: 0
        PropertyUsage:
          type: string
          description: Describes how the applicant will use the property, as `Livein` or `Investment`.
          enum:
            - Livein
            - Investment
        InterestRate:
          type: number
          description: The decimal amount of the annual interest rate.
          example: 0.0359
        RentalIncome:
          type: number
          description: The monthly rental income associated with the loan.
          example: 2500.25
        RentalExpense:
            type: number
            description: The monthly rental expense associated with the loan.
            example: 1500.50
        OwnershipPercentage:
          type: number
          description: The decimal amount of the ownership percentage.
          example: 1.0
    RequestTestCreateApplication:
      required:
      - DemoApplicationsRequired
      - IsStatedAndActual
      - CreateJointApplication
      type: object
      properties:
        DemoApplicationsRequired:
          type: number
          format: integer
          example: 1
          description: The number of test applications to create.
        IsStatedAndActual:
          type: boolean
          description: Boolean to indicate whether you want a "declare and verify" approach to validation (true) or "detect and position" (false).
        CreateJointApplication:
          type: boolean
          description: Boolean to indicate whether you want a single or joint test application.
        ProvideAccounts:
          type: boolean
          description: Boolean as to whether you want to provide your own data or use the standard test data provided by XAI Validate. The default is false. If you specify true the response payload will include unqiue URLs against which you can PUT your own data. Please see /financialvalidation/provideaccounts
        Lender:
          description: This optional parameter can be used to drive the credit policy against which you would like your application assessed. The code will be defined as part of your onboarding process.
          example: YourLenderCreditPolicyCode
    ResponseTestCreateApplication:
      required:
      - Applications
      - RequestId
      type: object
      properties:
        Applications:
          type: array
          description: List of test applications created.
          items:
            type: object
            properties:
              Arn:
                type: string
                description: the `ApplicationReferenceNumber` of the test application created,
                example: DEMO123456
              GroupId:
                type: string
                description: Unique GroupId for the financial validation job.
                example: AABB12345-3fa85f64-5717-4562-b3fc-2c963f66afa6
              ApplicationContacts:
                type: array
                description: List of test applicants created.
                items:
                  type: object
                  properties:
                    EmailAddress:
                      type: string
                      format: email
                      description: Email address identifiers for test applicants created.
        RequestId:
          type: string
          description: Unique identifier for the request that generated the error.
          example: RojLCjD-ywPPMNg=
    ResponseRequestError:
      required:
      - Errors
      - HasErrors
      - RequestId
      type: object
      properties:
        Errors:
          type: array
          description: Description of error(s).
          items:
            type: object
            properties:
              ErrorCode:
                type: string
                description: The error type code.
                enum:
                  - ERR001
              ErrorType:
                type: string
                description: The error type.
                enum:
                  - Generic
              Code:
                type: string
                description: The message type code.
                enum:
                  - Error
              Message:
                type: string
                description: The error message.
        HasErrors:
          type: boolean
          description: Boolean indicator as to whether the response indicates errors.
        RequestId:
          type: string
          description: 'Unique identifier for the request that generated the error.     '
          example: RojLCjD-ywPPMNg=
    
    RequestCreditEnquiry:
      required:
      - ApplicationReferenceNumber
      - FirstName
      - Surname
      - DateOfBirth
      - DriversLicenseNumber
      - DriversLicenseState
      - ResidentialAddress
      type: object
      properties:
        ApplicationReferenceNumber:
          type: string
          description: Unique identifier for the application.
          example: "ABC123456"
        FirstName:
          type: string
          description: Applicant first name - this is required.
        MiddleName:
          type: string
          description: Applicant middle name.
        Surname:
          type: string
          description: Applicant last name - this is required.
        DateOfBirth:
          type: string
          description: Applicant date of birth - this is required.
          format: date
        DriversLicenseNumber:
          type: string
          description: Applicant drivers license number - this is required.
        DriversLicenseState:
          type: string
          description: Applicant drivers license state - this is required.
        ResidentialAddress:
          type: string
          description: Applicant's residential address as a string
          example: 123 Example Street, Demoville, 2222, NSW
    ResponseCreditEnquiry:
      type: object
      properties:
        CreditEnquiryId:
          type: string
          description: Unique identifier for the credit enquiry.
        ApplicationReferenceNumber:
          type: string
          description: Unique identifier for the application.
          example: "ABC123456"
        RequestId:
          type: string
          example: RojLCjD-ywPPMNg=
          description: unique request identifier
    RequestCreditGetEnquiry:
      type: object
      properties:
        CreditEnquiryId:
          type: string
          description: Unique identifier for the credit enquiry.
    ResponseCreditGetEnquiry:
      type: object
      properties:
        CreditEnquiryId:
          type: string
          description: Unique identifier for the credit enquiry.
        ApplicationReferenceNumber:
          type: string
          description: Unique identifier for the application.
          example: "ABC123456"
        TBD:
          type: string
          description: To be determined.
        RequestId:
          type: string
          example: RojLCjD-ywPPMNg=
          description: unique request identifier
    RequestCreditGetSummary:
      type: object
      properties:
        ApplicationReferenceNumber:
          type: string
          description: Unique identifier for the application.
          example: "ABC123456"
        CreditEnquiryId:
          type: string
          description: Unique identifier for the credit enquiry.
    ResponseCreditGetSummary:
      required:
      - Application
      type: object
      properties:
        Application:
          type: object
          properties:
            ApplicationReferenceNumber:
              type: string
              description: Unique XAI Validate application reference number (Arn).
                Results for one application can be retrieved at a time.
            ExternalApplicationReferenceNumber:
              type: string
              description: Unique application identifier from your own system.
          description: Request object containing Application Create payload.
        CreditReportAccountSummary:
          type: array
          description: Financial Validate result objects for each automated assessment.
          items:
            type: object
            properties:
              FinancialInstitution:
                type: string
                example: "Commonwealth Bank of Australia"
                description: the financial institution name from an agreed enumeration
              AccountBsb:
                type: string
                example: 065-125
                description: the account BSB if available
              AccountNumber:
                type: string
                example: 112xxxx4658
                description: Account number from the source system. This can be obfuscated before providing. This will form part of the matching logic to identify joint account ownership.
              AccountType:
                type: string
                example: TRANSACTION
                description: Account type indicator. This will be used to drive configuration within your client profile. If this isn't provided the account type default will be `OTHER` 
                enum:
                - TRANSACTION
                - CREDITCARD
                - HOMELOAN
                - PERSONALLOAN
                - OTHER
              AccountName:
                type: string
                example: PARTY ACCOUNT
                description: The name of the account.
              CurrentBalance:
                type: number
                example: -5486.15
                description: The balance of the account at the request point of time. Can be positive, zero or negative
              AvailableBalance:
                type: number
                example: -5454.15
                description: Balance representing the amount of funds available for transfer. Assumed to be zero or positive. This should be the `CurrentBalance` – sum(pending transactions)
              CreditLimit:
                type: number
                example: 10000
                description: The maximum amount of credit available for the account.
              AccountAge:
                type: number
                example: 12
                description: Age in months of account.
        ApplicationContactResults:     
          type: array
          description: Credit assessment result objects for each applicant.
          items:
            type: object
            required:
            - ContactId
            - Version
            - CreditSummary
            properties:
              ContactId:
                type: integer
                description: Unique identifier for the contact record created for your applicant.
              Version:
                type: string
                description: The version of the application that was created  
              CreditPolicyRuleSummary:
                type: array
                description: Summary object for Credit Policy rules.
                items:
                  type: object
                  properties:
                    AssessmentStatus:
                      type: string
                      description: Overall status of the assessment - returns
                        FAILED if any individual results are FAILED.
                      enum:
                        - PASSED
                        - FAILED
                        - REVIEWED
                    CreditPolicyRuleName:
                      type: string
                      description: The configured credit policy rule
                      example: Evidence of payment arrears
                    CreditPolicyRuleValue:
                      type: integer
                      description: The configured credit policy rule result form the credit bureau.
                      example: 2 
        RequestId:
          type: string
          example: RojLCjD-ywPPMNg=
          description: unique request identifier
    RequestGetApplication:
      required:
      - ApplicationReferenceNumber
      type: object
      properties:
        ApplicationReferenceNumber:
          type: string
          description: Unique identifier for the application.
          example: "ABC123456"
    ResponseGetApplication:
      $ref: '#/components/schemas/ApplicationSchema'
    ApplicationSchema:
      required:
      - Application
      type: object
      properties:
        Application:
          type: object
          properties:
            ApplicationReferenceNumber:
              type: string
              description: Unique XAI Validate Application Reference Number (Arn).
                This will be returned from the [`/application/create`](#/application/createApplication)
                endpoint.
            ApplicationId:
              type: integer
              description: Unique identifier for the application
            Version:
              type: string
              description: The version of the application being managed
            ApplicationStatus:
              type: string
              description: Status of the application being managed. This is an optional parameter with the default value set to `Assess`. If you use `Commenced`, then automated assessment won't be triggered until you set this value to `Assess`.
              enum:
              - Assess
              - Commenced
            SecurityProperties:
              type: array
              description: List of all security properties linked to the application
              items:
                type: object
                properties:
                  PropertyAddress:
                    type: string
                    description: The full address of the security property.
                  PropertyPostcode:
                    type: string
                    description: The postcode of the security property.
                  PropertyType:
                    type: string
                    description: The property type of the security.
                    enum:
                    - HOUSE
                    - UNIT
                    - APARTMENT
                    - FLATS
                    - TOWNHOUSE
                  PropertyUsage:
                    type: string
                    description: How the property will be used - `Livein` or `Investment`.
                    enum:
                    - Investment
                    - Livein
                  EstimatedValue:
                    type: number
                    description: The estimated value of the security.
            Product:
              type: object
              properties:
                  Key:
                    type: string
                    description: The product key.
                  RepaymentType:
                    type: string
                    description: The repayment type of the product.
                    enum:
                    - PI
                    - IO
                    - LOC
                  LoanPurpose:
                    type: string
                    description: The purpose of the product.
                    enum:
                    - PUR
                    - REF
                  LoanTerm:
                    type: number
                    description: The loan term in years.
                  MonthlyRepayment:
                    type: number
                    description: The monthly loan repayment in dollars.
                  InterestRate:
                    type: number
                    description: The interest rate of the loan.
                  LoanAmount:
                    type: number
                    description: The loan amount for the loan.
            DeclaredFinancialsApplication:
              type: object
              description: Application-specific "declared financials". These will
                be consumed as part of XAI Validate's automated assessment, and compared
                to "actual financials" identified as part of the AI models, within
                your credit policy tolerances.
              properties:
                AssetsCash:
                  type: number
                  description: The application's total cash savings - to be used
                    as "deposit" declared financial.
            Households:
              type: array
              description: Array containing Households. These in turn contain applicants.
              items:
                type: object
                properties:
                  HouseholdAddress:
                    type: string
                    description: |
                      Household address - default `Household _n_`
                  DeclaredFinancialsHousehold:
                    type: object
                    description: Household-specific "declared financials". These will
                      be consumed as part of XAI Validate's automated assessment,
                      and compared to "actual financials" identified as part of the
                      AI models, within your credit policy tolerances.
                    properties:
                      ExpensesMonthly:
                        type: number
                        description: The household's monthly expenses. This is the
                          sum of monthly non-discretionary expenses for the applicants
                          within the household.
                        format: double
                        example: 1555.44
                      ExpenseHem:
                        type: number
                        description: Represents the monthly HEM amount relevant to the applicant.
                        format: double
                        example: 2255.44
                  ApplicationContacts:
                    type: array
                    description: Object containing array of applicants. The first
                      Applicant in the array will be considered the "primary" applicant.
                      The current allowed maximum applicants is two. We will match
                      applicants based on email address.
                    items:
                      type: object
                      properties:
                        ContactId:
                          type: integer
                          description: Unique identifier for the contact record created for your applicant.
                        Version:
                          type: string
                          description: The version of the application that was created
                        EmailAddress:
                          type: string
                          description: Applicant email address. This will be used
                            to assign "stated/declared" financials to an applicant
                        FirstName:
                          type: string
                          description: Applicant first name - this is required.
                        Surname:
                          type: string
                          description: Applicant last name - this is required.
                        PhoneNumber:
                          type: string
                          description: Applicant phone number.
                        DateOfBirth:
                          type: string
                          description: Applicant date of birth.
                          format: date
                        ConsentedOn:
                          type: string
                          description: The date and time that the applicant consented to credit checks.
                          format: date-time
                        ResidentialAddress:
                          type: string
                          description: The full residential address of the applicant
                        HasHecsDebt:
                          type: boolean
                          description: Determines whether the applicant has a HECS debt to pay.
                        HecsRemainingBalance:
                          type: number
                          description: The amount of HECS debt remaining. This is an optional parameter and is only considered if "HasHecsDebt" is true.
                        MaritalStatus:
                          type: string
                          description: Enumeration indicating the marital status type i.e. defacto, single etc. Used in HEM calculations.
                          enum:
                          - DEFACTO
                          - MARRIED
                          - SEPARATED
                          - SINGLE
                        Dependants:
                          type: number
                          description: The number of dependants for the applicant
                        ResidentialStatus:
                          type: string
                          description: Enumeration indicating the residential status type i.e. renting (RENT), own with mortgage (OM), own outright (OO), sharehousing (SHARE) etc.
                          enum:
                          - RENT
                          - OO
                          - OM
                          - SHARE
                        DriversLicenseNumber:
                          type: string
                          description: The drivers license number for the applicant
                        DriversLicenseState:
                          type: string
                          description: The drivers license state for the applicant
                        ContactType:
                          type: string
                          description: The type of applicant
                          enum:
                          - PA
                          - SA
                        ExternalDataIds:
                          type: object
                          properties:
                            DataProviderName:
                              type: string
                              description: Name of your data provider. Currently accepted
                                values are `YOD11` (for Yodlee API 1.1) and `ODS` for illion ODS.
                              enum:
                              - YOD11
                              - ODS
                              - EXT
                              - MB
                            DataProviderReference:
                              type: array
                              description: List of external reference identifiers
                                for your data provider.
                              items:
                                type: string
                          description: If you need to append additional financial
                            data, your data aggregator details can be passed in this
                            optional object.
                        DeclaredFinancialsApplicant:
                          type: object
                          description: Applicant-specific "declared financials". These
                            will be consumed as part of XAI Validate's automated assessment,
                            and compared to "actual financials" identified as part
                            of the AI models, within your credit policy tolerances.
                          properties:
                            IncomeSalary:
                              type: object
                              properties:
                                IncomeGrossAnnualSalaryAmount:
                                  type: number
                                  description: 'The applicant''s gross annual income
                                    amount. required: true'
                                IncomeGrossAnnualSalaryFrequency:
                                  type: string
                                  description: 'The applicant''s income frequency.
                                    required: true'
                                  enum:
                                  - MONTH
                                  - FORT
                                  - WEEK
                                  - ANNUAL
                                  - IRREGULAR
                                Employer:
                                  type: string
                                  description: The name of the applicant''s employer
                                EmploymentType:
                                  type: string
                                  description: The applicant''s employment type.
                                  enum:
                                  - CASUAL
                                  - FT
                                  - PT
                                  - SE
                                  - UN
                            IncomeRental:
                              type: array
                              description: The applicant's rental income per investment
                                property. Current maximum declared home loans is
                                8.
                              items:
                                type: object
                                properties:
                                  RentalPropertyAddress:
                                    type: string
                                    description: The address of the investment property.
                                  RentalPropertyPostcode:
                                    type: string
                                    description: The postcode of the investment property.                     
                                  RentalPropertyType:
                                    type: string
                                    enum:
                                    - HOUSE
                                    - UNIT
                                    - APARTMENT
                                    - FLATS
                                    - TOWNHOUSE                         
                                    description: The property type of the investment property.
                                  IncomeRentalMonthly:
                                    type: number
                                    description: Gross monthly rental income for the investment
                                      property.
                                  InvestmentPropertyOwnershipPercentage:
                                    type: number
                                    description: Applicant ownership percentage
                                      for investment property.
                                  InvestmentPropertyExpenses:
                                    type: number
                                    description: Applicant investment property expenses.
                            IncomeSavingsInterestAnnual:
                              type: number
                              description: Yearly savings interest for the applicant. Will appear as "Interest"
                            IncomeSharesAnnual:
                              type: number
                              description: Yearly share dividends for the applicant. Will appear as "Dividends and distributions"
                            IncomeGovernmentPaymentsAnnual:
                              type: number
                              description: Yearly government payments for the applicant. Will appear as "Government benefits"
                            IncomeGiftsAnnual:
                              type: number
                              description: Yearly gifts payments for the applicant. Will appear as "Gifts"
                            IncomeChildSupportAnnual:
                              type: number
                              description: Yearly child support payments for the applicant. Will appear as "Child support"
                            IncomeSelfEmployedAnnual:
                              type: number
                              description: Yearly self employed income for the applicant. Will appear as "Self employed income"   
                            IncomeOtherAnnual:
                              type: number
                              description: Yearly other income for the applicant. Will appear as "Other" 
                            IncomeCommissionsAndBonusesAnnual:
                              description: Yearly commissions and bonuses for the applicant.
                              type: number
                            IncomeOvertimeAnnual:
                              description: Yearly overtime income for the applicant.
                              type: number
                            IncomeCarAllowanceAnnual:
                              description: Yearly car allowance income for the applicant.
                              type: number
                            IncomeOtherAddbacksAnnual:
                              description: Yearly other addback income for the applicant.
                              type: number
                            IncomeSelfEmployedAbnormalAnnual:
                              description: Yearly self-employed abnormal income for the applicant.
                              type: number
                            IncomeSelfEmployedNetProfitAnnualAnnual:
                              description: Yearly self employed net profit for the applicant.
                              type: number
                            IncomeSelfEmployedAddbackMotorVehicleAnnual:
                              description: Yearly income from motor vehicle benefits for the applicant.
                              type: number
                            IncomeSelfEmployedAddbackDepreciationAnnual:
                              description: Yearly income from depreciation offset for the applicant.
                              type: number       
                            IncomeSelfEmployedAddbackOtherAnnual:
                              description: Yearly income from other addbacks for the applicant.
                              type: number
                            IncomeSuperannuationAnnual:
                              description: Yearly superannuation income for the applicant.
                              type: number
                            LiabilitiesHomeLoans:
                              required:
                                - HomeLoanBalance
                                - HomeLoanInterestRate
                                - HomeLoanTerm
                                - HomeLoanRepaymentType
                              type: array
                              description: The applicant's home loans. Current maximum declared home loans is 8. If you don't provide the HomeLoanRepaymentMonthly value you need to provide HomeLoanInterestRate, HomeLoanTerm, HomeLoanRepaymentType. This will enable us to derive the monthly repayment.
                              items:
                                type: object
                                properties:
                                  Id:
                                    type: number
                                    description: The unique identifier for the home loan liability.                            
                                  HomeLoanName:
                                    type: string
                                    description: The name or institution of the home loan liability.
                                  HomeLoanPropertyAddress:
                                    type: string
                                    description: The address of the home loan liability.
                                  HomeLoanBalance:
                                    type: number
                                    description: Declared home loan balance.
                                  HomeLoanRepaymentMonthly:
                                    type: number
                                    description: Declared home loan monthly repayment.
                                  HomeLoanOwnershipPercentage:
                                    type: number
                                    description: Applicant ownership percentage
                                      for property.
                                  HomeLoanInterestRate:
                                    type: number
                                    description: Declared home loan interest rate.
                                  HomeLoanTerm:
                                    type: number
                                    description: Declared home loan term.
                                  HomeLoanRepaymentType:
                                    type: string
                                    description: Declared home loan repayment type.
                                    enum:
                                    - PI
                                    - IO
                                    - LOC
                                  IsRefinanceLoan:
                                    type: boolean
                                    description: Indicates the home loan is being refinanced as part of application. This ensures the liability is correctly handled in serviceability calculations, by removing it as an ongoing debt committment. This is only used if the LoanPurpose is set to `REF`.
                                  IsInvestmentLoan:
                                    type: boolean
                                    description: Indicates the home loan is attached to a property that is being used as an investment. This boolean informs serviceability calculations that interest for the home loan is to be considered for tax deductions purposes within credit policy configuration.
                            LiabilitiesPersonalLoans:
                              type: array
                              description: The applicant's personal loans.
                              items:
                                type: object
                                properties:
                                  Id:
                                    type: number
                                    description: The unique identifier for the personal loan liability.
                                  PersonalLoanName:
                                    type: string
                                    description: The name or institution of the personal loan liability.
                                  PersonalLoanBalance:
                                    type: number
                                    description: Declared personal loan balance.
                                  PersonalLoanRepaymentMonthly:
                                    type: number
                                    description: Declared personal loan monthly repayment.
                                  PersonalLoanOwnershipPercentage:
                                    type: number
                                    description: Declared ownership of the personal loan for the applicant (between 0 and 1).
                                    maximum: 1
                                    minimum: 0
                                    example: 0.5
                                  IsRefinanceLoan:
                                    type: boolean
                                    description: Indicates the loan is being refinanced as part of application. This ensures the liability is correctly handled in serviceability calculations.
                            LiabilitiesCreditCards:
                              type: array
                              description: The applicant's credit cards.
                              items:
                                type: object
                                properties:
                                  Id:
                                    type: number
                                    description: The unique identifier for the credit card liability.
                                  CreditCardName:
                                    type: string
                                    description: The name or institution of the credit card liability.
                                  CreditCardBalance:
                                    type: number
                                    description: Declared credit card balance.
                                  CreditCardLimit:
                                    type: number
                                    description: Declared credit card monthly repayment.
                                  IsRefinanceLoan:
                                    type: boolean
                                    description: Indicates the credit/store card is being refinanced as part of application. This ensures the liability is correctly handled in serviceability calculations.
                                  IsJoint:
                                    type: boolean
                                    description: Indicates the credit/store card is held jointly with the other applicant in the application.
                            LiabilitiesRentOrBoardMonthly:
                              type: number
                              description: 'The applicant''s monthly rent or board payments. '
                            LiabilitiesCreditCardLimit:
                              type: number
                              description: 'The applicant''s total credit card limit
                                for all cards.            '
                            LiabilitiesCreditCardBalance:
                              type: number
                              description: 'The applicant''s total credit card balance
                                for all cards.                                 '
                            LiabilitiesPersonalLoanBalance:
                              type: number
                              description: 'The applicant''s total personal loan
                                balance for all loans.            '
                            LiabilitiesPersonalLoanRepaymentMonthly:
                              type: number
                              description: "The applicant's total personal loan\
                                \ monthly repayment for all loans.    \n\n  "
                            LiabilitiesChildMaintenance:
                              type: number
                              description: 'The applicant''s total child maintenance amounts.  '
                            ExpensesFoodGroceriesMonthly:
                              type: number
                              description: Declared monthly expenses for food and groceries. Will appear under "Food, groceries and household cleaning products" category.
                            ExpensesUtiliesPrimaryResidenceMonthly:
                              type: number
                              description: Declared monthly expenses for utilities and insurance for the primary residence. Will appear under "Utilities for the primary residence"  
                            ExpensesUtilitiesInsuranceMonthly:
                              type: number
                              description: Declared monthly expenses for utilities and insurance forother residences. Will appear under "Utilities and insurance for other residences"
                            ExpensesClothingPersonalCareMonthly:
                              type: number
                              description: Declared monthly expenses for clothing and personal care. Will appear under "Clothing and personal care"
                            ExpensesChildSupportMonthly:
                              type: number
                              description: Declared monthly expenses for Child Support. Will appear under "Child support"
                            ExpensesMedicalHealthCareMonthly:
                              type: number
                              description: Declared monthly expenses for medical and health care. Will appear under "Medical and health care"
                            ExpensesTransportMonthly:
                              type: number
                              description: Declared monthly expenses for transport. Will appear under "Transportation costs including public transport and taxis"
                            ExpensesEntertainmentRecreationMonthly:
                              type: number
                              description: Declared monthly expenses for recreation and entertainment. Will appear under "Recreation, entertainment and travel"
                            ExpensesChildcareMonthly:
                              type: number
                              description: Declared monthly expenses for childcare. Will appear under "Childcare"  
                            ExpensesRentMonthly:
                              type: number
                              description: Declared monthly expenses for rent or board. Will appear under "Rent or board"
                            ExpensesSchoolTuitionMonthly:
                              type: number
                              description: Declared monthly expenses for public or private school education. Will appear under "Public and private schooling and tuition"
                            ExpensesAlcoholMonthly:
                              type: number
                              description: Declared monthly expenses for alcohol. Will appear under "Alcoholic beverages"
                            ExpensesCashWithdrawalsMonthly:
                              type: number
                              description: Declared monthly expenses for cash withdrawals. Will appear under "Cash withdrawals"
                            ExpensesCommunicationsMonthly:
                              type: number
                              description: Declared monthly expenses for communications and subscriptions. Will appear under "Communications and subscriptions"
                            ExpensesCreditCardRepaymentsMonthly:
                              type: number
                              description: Declared monthly expenses for credit card repayments. Will appear under "Credit card repayments"
                            ExpensesFeesTaxesOtherResidencesMonthly:
                              type: number
                              description: Declared monthly expenses for fees and taxes on other residences. Will appear under "Fees and taxes on the other residences"
                            ExpensesFeesTaxesPrimaryResidencesMonthly:
                              type: number
                              description: Declared monthly expenses for fees and taxes on the primary residence. Will appear under "Fees and taxes on the primary residence"
                            ExpensesGeneralInsuranceMonthly:
                              type: number
                              description: Declared monthly expenses for general insurance. Will appear under "General insurance"
                            ExpensesHealthInsuranceMonthly:
                              type: number
                              description: Declared monthly expenses for health insurance. Will appear under "Health insurance"       
                            ExpensesHigherEducationMonthly:
                              type: number
                              description: Declared monthly expenses for higher education and vocational training. Will appear under "Higher education, vocational training and professional association"                                     
                            ExpensesHomeLoanRepaymentsMonthly:
                              type: number
                              description: Declared monthly expenses for home loan repayments. Will appear under "Home loan repayments"   
                            ExpensesHouseholdFurnishingsMonthly:
                              type: number
                              description: Declared monthly expenses for household furnishings. Will appear under "Household furnishings, equipment, and home repairs and improvements"                             
                            ExpensesOtherLoanRepaymentsMonthly:
                              type: number
                              description: Declared monthly expenses for other loan repayments. Will appear under "Other loan repayments"   
                            ExpensesRecreationalGamblingMonthly:
                              type: number
                              description: Declared monthly expenses for recreational gambling. Will appear under "Recreational gambling" 
                            ExpensesRestaurantsCafesMonthly:
                              type: number
                              description: Declared monthly expenses for restaurants, cafes and takeaway. Will appear under "Restaurants, cafes and takeaway"  
                            ExpensesTransfersMonthly:
                              type: number
                              description: Declared monthly expenses for transfers. Will appear under "Transfers"  
                              
                            ExpensesOtherMonthly:
                              type: number
                              description: Declared monthly expenses for other goods and services. Will appear under "Other goods and services"

          description: Object containing application payload.
    RequestGetApplicationBeginUrl:
      required:
      - ApplicationUniqueNumber
      type: object
      properties:
        ApplicationUniqueNumber:
          type: string
          format: uuid
          description: Unique identifier for the application.
    ResponseGetApplicationBeginUrl:
      required:
        - ApplicationUniqueNumber
        - ApplicationBeginUrl
        - RequestId
      type: object
      properties:
        ApplicationUniqueNumber:
          type: string
          format: uuid
          description: Unique identifier for the application.
        ApplicationBeginUrl:
          type: string
          example: "https://apply.yourbrand.com.au?nnnnnnnnnnnnnnnnnn"
          description: Secure URL to begin or resume customer application. The default expiry is set to 2 hours.
        ExpiryIn:
          type: integer
          example: 7200
          description: Expiry time for secure URL in seconds.
        RequestId:
          type: string
          example: RojLCjD-ywPPMNg=
          description: Unique request identifier.
    RequestUploadDocument: 
      required:
        - ApplicationReferenceNumber
        - DocumentName
        - FileType
        - DocumentType
      type: object
      properties:
        ApplicationReferenceNumber:
          type: string
          description: Unique identifier for the application.
          example: "ABC123456"
        DocumentName:
          type: string
          example: "Contract for ABC123456"
          description: The document name.
        FileType:
          type: string
          example: "application/pdf"
          description: The type of file.
          enum:
          - application/msword
          - application/vnd.openxmlformats-officedocument.wordprocessingml.document
          - application/pdf
          - application/vnd.ms-excel
          - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
          - image/jpeg
          - image/png
        DocumentType:
          type: string
          example: COS
          description: The type of the document.
          enum:
          - BS
          - CC
          - PS
          - TR
          - LS
          - HL
          - DEP
          - PLS
          - VOI
          - ID
          - NOA
          - EM
          - CTR
          - EC
          - AL
          - VR
          - IL
          - RENT
          - BONUS
          - GOV
          - BRD
          - COS
          - OTHER
    ResponseUploadDocument:
      type: object
      properties:
        LinkUrl:
          type: string
          description: Pre-signe URL to upload document.
        RequestId:
          type: string
          example: RojLCjD-ywPPMNg=
          description: Unique request identifier.
    RequestGetDocument: 
      required:
        - ApplicationReferenceNumber
        - DocumentId
      type: object
      properties:
        ApplicationReferenceNumber:
          type: string
          description: Unique identifier for the application.
          example: "ABC123456"
        DocumentId:
          type: integer
          description: The unique Id of the document.
    ResponseGetDocument:
      type: object
      properties:
        ApplicationDocument:
          $ref: '#/components/schemas/DocumentSchema'
        RequestId:
          type: string
          example: RojLCjD-ywPPMNg=
          description: Unique request identifier.    
    RequestGetListDocument: 
      required:
        - ApplicationReferenceNumber
      type: object
      properties:
        ApplicationReferenceNumber:
          type: string
          description: Unique identifier for the application.
          example: "ABC123456"
        SearchCriteria:
          type: object
          description: The search criteria.
          properties:
            TextFilter:
              type: string
              description: Text filter for document name or type.
            ContactIds:
              type: array
              description: Contact Ids of the document.
              items:
                type: integer
        SortCriteria:
          type: object
          description: The sort criteria.
          properties:
            SortField:
              type: string
              description: The sort field.
            SortDirection:
              type: string
              description: The sort direction.
        Pagination:
          type: object
          properties:
            PageSize:
              type: number
              description: The number of items per page.
            PageNumber:
              type: number
              description: The current page number.
    ResponseGetListDocument:
      type: object
      properties:
        ApplicationDocuments:
          type: array
          items:
            $ref: '#/components/schemas/DocumentSchema'
        Pagination:
          type: object
          properties:
            PageSize:
              type: number
              description: The number of items per page.
            PageNumber:
              type: number
              description: The current page number.
            TotalSize:
              type: number
              description: The total number of items.
            TotalPages:
              type: number
              description: The total number of pages.
        RequestId:
          type: string
          example: RojLCjD-ywPPMNg=
          description: Unique request identifier.
    RequestDownloadDocument: 
      required:
        - ApplicationReferenceNumber
        - DocumentId
      type: object
      properties:
        ApplicationReferenceNumber:
          type: string
          description: Unique identifier for the application.
          example: "ABC123456"
        DocumentId:
          type: integer
          description: The unique Id of the document.
    ResponseDownloadDocument:
      type: object
      properties:
        LinkUrl:
          type: string
          description: Pre-signed URL to download document.
        RequestId:
          type: string
          example: RojLCjD-ywPPMNg=
          description: Unique request identifier.   
    DocumentSchema:
      type: object
      properties:
        Name:
          type: string
          description: The name of the document.
        DocumentType:
          type: string
          example: COS
          description: The type of the document.
          enum:
          - BS
          - CC
          - PS
          - TR
          - LS
          - HL
          - DEP
          - PLS
          - VOI
          - ID
          - NOA
          - EM
          - CTR
          - EC
          - AL
          - VR
          - IL
          - RENT
          - BONUS
          - GOV
          - BRD
          - COS
          - OTHER
        FileType:
          type: string
          example: "application/pdf"
          description: The type of file.
          enum:
          - application/msword
          - application/vnd.openxmlformats-officedocument.wordprocessingml.document
          - application/pdf
          - application/vnd.ms-excel
          - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
          - image/jpeg
          - image/png
        ApplicationId:
          type: integer
          description: The unique identifier of the application.
        DocumentStoreKey:
          type: string
          description: The document key with the path where document is stored in Document Management Store.
          example: "/ttil/ABC/ABC123245/2021121420323477-Test_Excel_document"
        Size:
          type: number
          description: The size of the document.
        UploadedOn:
          type: string
          format: date-time
          description: The date that document was uploaded.
        UploadedBy:
          type: string
          description: The user who uploaded the document.
        OcrStatus:
          type: string
          example: UNSUPPORTED
          description: OCR processing status of the document.
          enum:
          - CHECKING
          - READY
          - PROCESSING
          - SUCCESS
          - FAILED
          - DEAD
          - UNSUPPORTED
        Id:
          type: integer
          description: The unique identifier of the document.
        CreatedOn:
          type: string
          format: date-time
          description: The date that document was created.
        CreatedBy:
          type: string
          description: The user who created the document.
        LastUpdatedOn:
          type: string
          format: date-time
          description: The date the document was last updated.
        LastUpdateBy:
          type: string
          description: The user who last updated the document.
        RowVersion:
          type: string
          description: The database-level version of the document.
    RequestGetPostcodeCategory: 
      required:
        - Lender
        - Postcode
      type: object
      properties:
        Lender:
          type: string
          example: POLICY_CODE
          description: Policy or lender code.
        Postcode:
          type: string
          example: 2000
          description: The postcode.
        PropertyType:
          type: string
          example: HOUSE
          description: Property type to filter results by.
          enum:
          - APARTMENT
          - FLATS
          - HOUSE
          - TOWNHOUSE
          - UNIT
    ResponseGetPostcodeCategory:
      required:
      - Lender
      - Postcode
      - PostcodeType
      - Messages
      type: object
      properties:
        Lender:
          type: string
          example: POLICY_CODE
          description: Policy or lender code.
        Postcode:
          type: string
          example: 2000
          description: The postcode.
        PostcodeType:
          type: string
          example: METRO
          description: The postcode classification.
          enum:
          - METRO
          - RURAL
          - OTHER
        PropertyTypes:
          type: array
          description: Object containing postcode types, property types and minimum valuation required.
          items:
            required:
            - PostcodeCategory
            - MinimumValuationRequired
            - PropertyType
            type: object
            properties:
              PostcodeCategory:
                type: string
                description: Postcode category. Depending on your credit policy, these will determine whether you can lend against properties in these areas.
                example: CAT1
                enum: 
                - CAT1
                - CAT2
                - CAT3
                - CAT4
                - CAT5
              MinimumValuationRequired:
                type: string
                description: The minimum valuation required for properties in a postcode by property type.
                example: AVM
                enum: 
                - AVM
                - EVR
                - FV
                - NONE
                - PC
              PropertyType:
                type: string
                example: HOUSE
                description: Property type for the postcode and valuation type.
                enum:
                - APARTMENT
                - FLATS
                - HOUSE
                - TOWNHOUSE
                - UNIT
        Messages:
          type: array
          description: Array of objects containing any relevant messages or functional errors.          
        RequestId:
          type: string
          example: RojLCjD-ywPPGNg=
          description: Unique request identifier.   
    RequestPotentialMaxBorrowing:
      required:
      - ApplicationReferenceNumber      
      - ConfigurationSet
      type: object
      properties:
        ApplicationReferenceNumber:
          type: string
          description: The unique application reference number. 
          example: AAAA111222333
        ConfigurationSet:
          required:
          - Lender
          type: object
          description: These are the settings we will use when calculating the potential max borrowing of an application. These include the merchant, lender, configuration, and policy versions.
          properties:
            Merchant:
              type: string
              description: The client code you have configured a lending policy against.
              example: 'MERCHANTCODE'
            Lender:
              type: string
              description: The lender or product code you have configured a lending policy against.
              example: 'LENDERCODE'
            Version:
              type: object
              description: This is where you will specify the serviceability configuration of the credit policy you wish to use. A credit policy can have pre-configured variations, i.e., one where the new loan interest rate is 3% and another at 1%.
              properties:
                Id:
                  type: string
                  description: The Id code you have configured the specific lending policy against. This field is required to utilise an alternate configuration; otherwise, this field can be left as null or enter the value “1”.
                  example: '1'
                Label:
                  type: string
                  description: The label you have configured the specific lending policy against. For your default policy, use the term “DEFAULT”; if you have an alternative policy, this would be your chosen label.
                  example: 'DEFAULT'
        ValidationTypes:
            type: array
            items: 
              type: string
            example: ["VALIDATED", "STATED", "ACTUAL"]
            description: Optional string array indicating which values to use to calculate potential max borrowing amount, STATED, ACTUAL or VALIDATED data should be used.
    ResponsePotentialMaxBorrowing:
      required:
      - ApplicationReferenceNumber      
      - ConfigurationSet
      type: object
      properties:
        ApplicationReferenceNumber:
          type: string
          description: The unique application reference number. 
          example: AAAA111222333
        ConfigurationSet:
          required:
          - Lender
          type: object
          description: These are the settings we will use when calculating the potential max borrowing of an application. These include the merchant, lender, configuration, and policy versions.
          properties:
            Merchant:
              type: string
              description: The client code you have configured a lending policy against.
              example: 'MERCHANTCODE'
            Lender:
              type: string
              description: The lender or product code you have configured a lending policy against.
              example: 'LENDERCODE'
            Version:
              type: object
              description: This is where you will specify the serviceability configuration of the credit policy you wish to use. A credit policy can have pre-configured variations, i.e., one where the new loan interest rate is 3% and another at 1%.
              properties:
                Id:
                  type: string
                  description: The Id code you have configured the specific lending policy against. This field is required to utilise an alternate configuration; otherwise, this field can be left as null or enter the value “1”.
                  example: '1'
                Label:
                  type: string
                  description: The label you have configured the specific lending policy against. For your default policy, use the term “DEFAULT”; if you have an alternative policy, this would be your chosen label.
                  example: 'DEFAULT'
        PotentialMaxBorrowingAmountResults:
            type: array
            items: 
              type: object
              properties:
                PotentialMaxBorrowingAmount: 
                  type: number
                  format: decimal
                  description: The potential max borrowing amount
                  example: 832600.86
                DebtToIncomeRatio:
                  type: number
                  format: decimal
                  description: The debt-to-income ratio
                  example: 0.86
                ValidationType:
                  type: string
                  description: Indicates which data was used to calculate the potential max borrowing amount, could be either STATED, ACTUAL or VALIDATED
                  example: "VALIDATED"   
            example: [{"PotentialMaxBorrowingAmount": 832600.86, "DebtToIncomeRatio": 0.86, "ValidationType": "VALIDATED"}, {"PotentialMaxBorrowingAmount": 922600.23, "DebtToIncomeRatio": 0.86, "ValidationType": "STATED"}]            
  securitySchemes:
    tokenAuth:
      type: http
      scheme: basic
    apiAuth: 
      type: http
      scheme: bearer
      bearerFormat: JWT
    apiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
security:
- apiAuth: []
- apiKeyAuth: []
